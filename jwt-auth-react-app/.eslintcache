[{"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\index.js":"1","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\App.js":"2","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\reportWebVitals.js":"3","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\AppComponent.jsx":"4","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\AuthenticatedRoute.jsx":"5","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\login\\LoginComponent.jsx":"6","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\notes\\NoteForm.jsx":"7","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\home\\HomeComponent.jsx":"8","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\contexts\\UserContext.js":"9","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\notes\\NoteList.jsx":"10","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\expense\\ExpenseList.jsx":"11","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\event\\EventForm.jsx":"12","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\contact\\ContactList.jsx":"13","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\contact\\ContactForm.jsx":"14","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\contact\\ContactConfirm.jsx":"15","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\event\\EventList.jsx":"16","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\header\\HeaderComponent.jsx":"17","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\expense\\ExpenseForm.jsx":"18","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\services\\ErrorHandlerService.js":"19","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\services\\AuthService.js":"20","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\state\\StateComponent.jsx":"21","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\country\\CountryComponent.jsx":"22","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\modal\\ConfirmModalComponent.jsx":"23","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\group\\GroupComponent.jsx":"24","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\relationship\\RelationshipComponent.jsx":"25","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\modal\\ConfirmationComponent.jsx":"26","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\contact\\ContactService.js":"27","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\ContactModel.js":"28","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\services\\_api.js":"29","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\common\\ErrorHandlerComponent.jsx":"30","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\country\\CountryService.js":"31","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\group\\GroupService.js":"32","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\state\\StateService.js":"33","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\relationship\\RelationshipService.js":"34","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\RoleModel.js":"35","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\GroupModel.js":"36","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\StatusModel.js":"37","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\RelationshipModel.js":"38","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\StateModel.js":"39","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\UserModel.js":"40","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\CountryModel.js":"41"},{"size":517,"mtime":1616230941516,"results":"42","hashOfConfig":"43"},{"size":349,"mtime":1616230957778,"results":"44","hashOfConfig":"43"},{"size":375,"mtime":1616230941516,"results":"45","hashOfConfig":"43"},{"size":6601,"mtime":1618029421182,"results":"46","hashOfConfig":"43"},{"size":564,"mtime":1616230957779,"results":"47","hashOfConfig":"43"},{"size":4743,"mtime":1618029170652,"results":"48","hashOfConfig":"43"},{"size":2764,"mtime":1616230957800,"results":"49","hashOfConfig":"43"},{"size":3951,"mtime":1616230957787,"results":"50","hashOfConfig":"43"},{"size":268,"mtime":1617894771169,"results":"51","hashOfConfig":"43"},{"size":5522,"mtime":1616230957801,"results":"52","hashOfConfig":"43"},{"size":5562,"mtime":1616230957784,"results":"53","hashOfConfig":"43"},{"size":2784,"mtime":1616230957782,"results":"54","hashOfConfig":"43"},{"size":5975,"mtime":1616230957781,"results":"55","hashOfConfig":"43"},{"size":16619,"mtime":1616230957781,"results":"56","hashOfConfig":"43"},{"size":648,"mtime":1616230957780,"results":"57","hashOfConfig":"43"},{"size":5532,"mtime":1616230957783,"results":"58","hashOfConfig":"43"},{"size":4886,"mtime":1618028610807,"results":"59","hashOfConfig":"43"},{"size":3850,"mtime":1616230957784,"results":"60","hashOfConfig":"43"},{"size":742,"mtime":1616230957810,"results":"61","hashOfConfig":"43"},{"size":1635,"mtime":1618031236093,"results":"62","hashOfConfig":"43"},{"size":2008,"mtime":1616230957802,"results":"63","hashOfConfig":"43"},{"size":1467,"mtime":1616230957782,"results":"64","hashOfConfig":"43"},{"size":1635,"mtime":1616230957799,"results":"65","hashOfConfig":"43"},{"size":1524,"mtime":1616230957785,"results":"66","hashOfConfig":"43"},{"size":1699,"mtime":1616230957801,"results":"67","hashOfConfig":"43"},{"size":1356,"mtime":1616230957799,"results":"68","hashOfConfig":"43"},{"size":328,"mtime":1616230957781,"results":"69","hashOfConfig":"43"},{"size":701,"mtime":1616230957807,"results":"70","hashOfConfig":"43"},{"size":459,"mtime":1617899545588,"results":"71","hashOfConfig":"43"},{"size":415,"mtime":1616230957780,"results":"72","hashOfConfig":"43"},{"size":174,"mtime":1616230957782,"results":"73","hashOfConfig":"43"},{"size":164,"mtime":1616230957785,"results":"74","hashOfConfig":"43"},{"size":195,"mtime":1616230957802,"results":"75","hashOfConfig":"43"},{"size":192,"mtime":1616230957802,"results":"76","hashOfConfig":"43"},{"size":55,"mtime":1616230957808,"results":"77","hashOfConfig":"43"},{"size":89,"mtime":1616230957808,"results":"78","hashOfConfig":"43"},{"size":92,"mtime":1616230957809,"results":"79","hashOfConfig":"43"},{"size":117,"mtime":1616230957808,"results":"80","hashOfConfig":"43"},{"size":113,"mtime":1616230957809,"results":"81","hashOfConfig":"43"},{"size":115,"mtime":1616230957810,"results":"82","hashOfConfig":"43"},{"size":97,"mtime":1616230957807,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1r0b6go",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\index.js",[],["179","180"],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\App.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\reportWebVitals.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\AppComponent.jsx",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\AuthenticatedRoute.jsx",["181","182"],"import React, {Component} from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport AuthService from '../services/AuthService'\r\n\r\n\r\nclass AuthenticatedRoute extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n    }\r\n\r\n    render () {\r\n        console.log ('isUserAuthenticated ::: ' + this.props.isAuthenticated)\r\n        if (this.props.isAuthenticated) {\r\n            return <Route {...this.props} />\r\n        } else {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\login\\LoginComponent.jsx",["183"],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\notes\\NoteForm.jsx",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\home\\HomeComponent.jsx",["184","185","186","187","188","189","190","191","192","193"],"import React, { Component } from 'react'\r\n\r\nimport './HomeComponent.css'\r\n\r\nclass HomeComponent extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>                \r\n                <div className=\"card text-left\">\r\n                    <div className=\"card-header bg-transparent\">\r\n                        <h4>Home</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-3\">\r\n                                <div className=\"card\">\r\n                                    <img className=\"card-img-top\" src=\"images/contacts.jpg\" alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Contacts</h5>\r\n                                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                                    </div>\r\n                                </div>                  \r\n                            </div>                        \r\n                            <div className=\"col-sm-3\">\r\n                                <div className=\"card\">\r\n                                    <img className=\"card-img-top\" src=\"images/expenses.jpg\" alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Expenses</h5>\r\n                                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                                    </div>\r\n                                </div>                  \r\n                            </div>                        \r\n                            <div className=\"col-sm-3\">\r\n                                <div className=\"card\">\r\n                                    <img className=\"card-img-top\" src=\"images/events.jpg\" alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Events</h5>\r\n                                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                                    </div>\r\n                                </div>                  \r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                                <div className=\"card\">\r\n                                    <img className=\"card-img-top\" src=\"images/notes.png\" alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Notes</h5>\r\n                                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                                    </div>\r\n                                </div>                  \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-footer bg-transparent\"><a href=\"#\" className =\"btn btn-primary\">Go somewhere</a></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default HomeComponent","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\contexts\\UserContext.js",["194"],"import React, { Context } from 'react'\r\n\r\nexport const UserContext = React.createContext(\r\n    { \r\n        isAuthenticated: false,         \r\n        loggedInUserName: 'k.vadivelmurugan', \r\n        roles: [],\r\n        registerLogin: (username, password) => { } \r\n    })","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\notes\\NoteList.jsx",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\expense\\ExpenseList.jsx",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\event\\EventForm.jsx",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\contact\\ContactList.jsx",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\contact\\ContactForm.jsx",["195","196"],"\r\nimport React, { Component } from 'react'\r\n\r\nimport CountryComponent from '../country/CountryComponent.jsx'\r\nimport StateComponent from '../state/StateComponent.jsx'\r\nimport RelationshipComponent from '../relationship/RelationshipComponent.jsx'\r\nimport GroupComponent from '../group/GroupComponent.jsx'\r\n\r\nimport ConfirmModalComponent from '../modal/ConfirmModalComponent.jsx'\r\nimport ContactModel from '../../models/ContactModel'\r\n\r\nimport AuthService from '../../services/AuthService'\r\nimport ContactService from './ContactService'\r\n\r\nclass ContactForm extends Component {\r\n    constructor(props) {\r\n        console.log ('getLoggedInUserId ' + AuthService.getLoggedInUserId())\r\n        super(props)\r\n\r\n        this.state = {\r\n            contact : ContactModel,\r\n            showConfirmModal : false,\r\n            isValid : false,\r\n            errors : {\r\n                nickName : '',\r\n                personalEmail : '',\r\n                primaryAddress : '',\r\n                relationship : '',\r\n                group : ''\r\n            }        \r\n        }              \r\n    }\r\n\r\n    componentDidMount () {\r\n        this.initialize () \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h4>Contacts</h4>\r\n                    <p className=\"text-left\">Contacts {\">\"} Add</p>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form autoComplete=\"off\">\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label for=\"inputNickName4\">Nick name</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                                <input type=\"hidden\" className=\"form-control\" id=\"inputUserId\" placeholder=\"userId\" name=\"userId\" value={this.state.contact.nickName}/>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputNickName4\" placeholder=\"Nick name\" name=\"nickName\" value={this.state.contact.nickName} onChange={this.handleOnChange}/>\r\n                                <p class=\"text-danger\">{this.state.errors.nickName}</p>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label for=\"inputFirstname4\">First name</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputFirstname4\" placeholder=\"First name\" name=\"firstName\" value={this.state.contact.firstName} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label for=\"inputLastname4\">Last name</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputLastname4\" placeholder=\"Last name\" name=\"lastName\" value={this.state.contact.lastName} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label for=\"inputPersonalEmail4\">Personal Email</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                                <input type=\"email\" autoComplete=\"off\" className=\"form-control\" id=\"inputPersonalEmail4\" placeholder=\"Primary Email\" name=\"personalEmail\" value={this.state.contact.personalEmail} onChange={this.handleOnChange}/>\r\n                                <p class=\"text-danger\">{this.state.errors.personalEmail}</p>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label for=\"inputWorkEmail4\">Office Email</label>\r\n                                <input type=\"email\" autoComplete=\"off\" className=\"form-control\" id=\"inputWorkEmail4\" placeholder=\"Secondary Email\" name=\"workEmail\" value={this.state.contact.workEmail} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"inputAddress\">Door# / Block# / Apartment Name</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                            <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputAddress\" placeholder=\"Door# / Block# / Apartment Name\" name=\"primaryAddress\" value={this.state.contact.primaryAddress} onChange={this.handleOnChange}/>\r\n                            <p class=\"text-danger\">{this.state.errors.primaryAddress}</p>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"inputAddress2\">Street Name / Area Name</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                            <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Street Name / Area Name\" name=\"secondaryAddress\" value={this.state.contact.secondaryAddress} onChange={this.handleOnChange}/>\r\n                            <p class=\"text-danger\">{this.state.errors.secondaryAddress}</p>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-3\">\r\n                                {/* <label for=\"inputState\">State</label>\r\n                                <select id=\"inputState\" className=\"form-control\">\r\n                                    <option selected>Choose...</option>\r\n                                    <option>...</option>\r\n                                </select> */ }\r\n\r\n                                <CountryComponent componentName=\"country\" selectedCountry={this.state.contact.country} onChangeMethod={this.handleCountryOnChange} /> \r\n\r\n                                {/* <label for=\"inputCountry\">Country</label>\r\n                                <select id=\"inputCountry\" className=\"form-control\" name=\"countryId\" \r\n                                    value={this.state.contact.countryId}\r\n                                    onChange={this.handleOnChange}>\r\n                                    <option key=\"0\" value=\"0\">Choose a Country...</option>\r\n                                    {                            \r\n                                        this.state.countryList.map ((country) => {\r\n                                            return (\r\n                                                <option key={country.countryId} value={country.countryId}>{country.countryName}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select> */}\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                {/* <label for=\"inputState\">State</label>\r\n                                <select id=\"inputState\" className=\"form-control\">\r\n                                    <option selected>Choose...</option>\r\n                                    <option>...</option>\r\n                                </select> */}\r\n\r\n                                <StateComponent componentName=\"state\" selectedCountry={this.state.contact.country.countryId}  selectedState={this.state.contact.state} onChangeMethod={this.handleStateOnChange}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label for=\"inputCity\">City</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputCity\" placeholder=\"City Name\" name=\"city\" value={this.state.contact.city} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputZip\">Zip</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputZip\" name=\"zip\" value={this.state.contact.zip} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputMobile\">Mobile #</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputMobile\" name=\"mobile\" value={this.state.contact.mobile} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputHome\">Home #</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputHome\" name=\"homePhone\" value={this.state.contact.homePhone} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputWork\">Work #</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputWork\" name=\"workPhone\" value={this.state.contact.workPhone} onChange={this.handleOnChange}/>                                \r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <RelationshipComponent autoComplete=\"off\" componentName=\"relationship\" selectedRelationship={this.state.contact.relationship} onChangeMethod={this.handleRelationshipOnChange} isError={this.state.errors.relationship}/> \r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <GroupComponent autoComplete=\"off\" componentName=\"group\" selectedGroup={this.state.contact.group} onChangeMethod={this.handleGroupOnChange} isError={this.state.errors.group}/> \r\n                            </div>                                                       \r\n\r\n                        </div>                        \r\n                        <div className=\"form-row\">\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.showConfirmDialog} data-target={this.state.isValid ? \"#confirmModal\" : undefined} data-toggle='modal'  >Submit</button> &nbsp;\r\n                        <button type=\"button\" className=\"btn btn-primary\">Reset</button> &nbsp;\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleClickOnBack}>Back</button>\r\n                    </form>\r\n\r\n                    <ConfirmModalComponent handleOnClickYes={this.handleClickOnYes} handleOnClickNo={this.handleClickOnNo}/>\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n    \r\n    handleClickOnBack = () => {\r\n        this.props.history.push (\"/contacts\")\r\n        console.log (this.state.contact)    \r\n    }\r\n\r\n    handleOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n        this.setState ({\r\n            contact: { ...this.state.contact, [event.target.name]: event.target.value }\r\n        })\r\n        console.log ('country ' + this.state.contact.countryId)\r\n    }\r\n\r\n    handleCountryOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n\r\n        let country = this.state.contact.country\r\n\r\n        country.countryId = event.target.value\r\n\r\n        this.setState ({\r\n            contact: { ...this.state.contact, country: country }\r\n        })\r\n        console.log ('country ' + this.state.contact.country.countryId)\r\n    }\r\n\r\n    handleStateOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n\r\n        let state = this.state.contact.state\r\n\r\n        state.stateId = event.target.value\r\n\r\n        this.setState ({\r\n            contact: { ...this.state.contact, state: state }\r\n        })\r\n        console.log ('state ' + this.state.contact.state.stateId)\r\n    }    \r\n\r\n    handleRelationshipOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n\r\n        let relationship = this.state.contact.relationship\r\n\r\n        relationship.relationshipId = event.target.value\r\n\r\n        this.setState ({\r\n            contact: { ...this.state.contact, relationship: relationship }\r\n        })\r\n        console.log ('relationship ' + this.state.contact.relationship.relationshipId)\r\n    }    \r\n\r\n    handleGroupOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n\r\n        let group = this.state.contact.group\r\n\r\n        group.groupId = event.target.value\r\n\r\n        this.setState ({\r\n            contact: { ...this.state.contact, group: group }\r\n        })\r\n        console.log ('group ' + this.state.contact.group.groupId)\r\n    }   \r\n    \r\n    showConfirmDialog = (event) => {\r\n        console.log ('showConfirm')\r\n        event.preventDefault()\r\n        if (this.isValidForm()) {\r\n            this.setState ( {\r\n                showConfirmModal : !this.state.showConfirmModal\r\n            })\r\n        }\r\n    }\r\n\r\n    isValidForm = () => {\r\n        \r\n        let isValid = true;\r\n\r\n        let errors = {\r\n            nickName : '',\r\n            personalEmail : '',\r\n            primaryAddress : '',\r\n            relationship : '',\r\n            group : ''\r\n        }\r\n\r\n        let contact = this.state.contact\r\n\r\n        console.log ('this.state.contact.nickName ' + this.state.contact.nickName)\r\n        if (!contact.nickName) {\r\n            isValid = false\r\n            errors.nickName = 'Please enter Nick Name'\r\n        }\r\n\r\n        if (!this.state.contact.personalEmail) {\r\n            isValid = false\r\n            errors.personalEmail = 'Please enter Personal Email'\r\n        }\r\n\r\n        if (!this.state.contact.primaryAddress) {\r\n            isValid = false\r\n            errors.primaryAddress = 'Please enter Primary Address'\r\n        }\r\n\r\n        if (!this.state.contact.relationship.relationshipId) {\r\n            isValid = false\r\n            errors.relationship = 'Please choose the Relationship'\r\n        }\r\n\r\n        console.log ('this.state.contact.group.groupId  ' + this.state.contact.group.groupId )\r\n        if (!   this.state.contact.group.groupId) {\r\n            isValid = false\r\n            errors.group = 'Please choose the Group'\r\n        }\r\n        console.log ('isValid ' + isValid)\r\n        this.setState ({\r\n            isValid : isValid,\r\n            errors: errors\r\n        })\r\n        \r\n        return isValid\r\n    }\r\n\r\n    handleClickOnYes = () => {\r\n        console.log ('Yes')    \r\n        ContactService.saveContact (this.state.contact)\r\n            .then ((response) => {\r\n                console.log ('contact saved...') \r\n                this.props.history.push ('/contacts/confirm')\r\n            }) \r\n            .catch ( (response) => {\r\n                console.log ('contact save failed...')    \r\n            })\r\n    }\r\n\r\n    handleClickOnNo = () => {\r\n        console.log ('No')    \r\n\r\n    }\r\n\r\n    handleClickOnYes = () => {\r\n        console.log ('Yes')    \r\n        ContactService.saveContact (this.state.contact).then ( (response) => {\r\n                console.log ('contact saved...')  \r\n                this.props.history.push (\"/contacts/confirm\")  \r\n            }\r\n        ) .catch ( (response) => {\r\n                console.log ('contact save failed...')    \r\n            }\r\n        )\r\n    }\r\n\r\n    handleOnClickClose = () => {\r\n        console.log ('No')    \r\n\r\n    }\r\n\r\n    initialize = () => {\r\n        console.log ('pre-initialize ' + this.state.contact)\r\n        let user = this.state.contact.user\r\n        user.userId = AuthService.getLoggedInUserId()\r\n\r\n        let status = this.state.contact.status\r\n        status.statusId = 100\r\n          \r\n        this.setState ({\r\n            contact: { ...this.state.contact, user: user },\r\n            contact: { ...this.state.contact, status: status }\r\n        }) \r\n    }\r\n\r\n}\r\nexport default ContactForm","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\contact\\ContactConfirm.jsx",["197","198"],"import React, { Component } from 'react'\r\n\r\nimport ConfirmationComponent from '../modal/ConfirmationComponent.jsx'\r\n\r\nclass ContactConfirm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n           <ConfirmationComponent title=\"Contacts\" subTitle=\"Contacts > Confirm\" content=\"Your contact is saved successfully !!!\" navigateToBack=\"Contact List\" navigateToOnAnother=\"Add Another Contact\" navigateToBack =\"Contact List\" navigateToOnAnotherLink=\"/contacts/add\" navigateToOnBackLink=\"/contacts/\" history={this.props.history} /> \r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactConfirm","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\event\\EventList.jsx",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\header\\HeaderComponent.jsx",["199","200","201","202","203","204","205","206","207"],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\expense\\ExpenseForm.jsx",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\services\\ErrorHandlerService.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\services\\AuthService.js",["208","209"],"import axios from \"axios\"\r\n\r\nimport api from \"./_api.js\"\r\nimport RoleModel from './../models/RoleModel'\r\nclass AuthService {\r\n\r\n    doAuth (username, password) {\r\n        console.log (username + \" \" + password)        \r\n\r\n        return api.post ('auth/token', \r\n            {username : username,\r\n            password : password }\r\n        )\r\n    }\r\n\r\n    getRoles (userName) {\r\n        return api.get (`roles/${userName}`)\r\n    }\r\n\r\n    registerLogin (flag, user) {\r\n        console.log ('registerLogin called...')\r\n        sessionStorage.setItem('userId', user.userId)        \r\n        sessionStorage.setItem('userName', user.userName)        \r\n        sessionStorage.setItem('jwtToken', user.jwtToken)\r\n        sessionStorage.setItem('roles', JSON.stringify(user.authorities))\r\n        console.log ('Roles :: ' + JSON.stringify(user.authorities))\r\n        sessionStorage.setItem ('isAuthenticated', flag)       \r\n    }\r\n\r\n    UnregisterLogin (userName) {\r\n        sessionStorage.removeItem('userName')\r\n        sessionStorage.removeItem('jwtToken')\r\n        sessionStorage.removeItem('userId')\r\n        sessionStorage.removeItem('roles')\r\n        sessionStorage.removeItem ('isAuthenticated')\r\n    } \r\n\r\n    getLoggedInUserName() {\r\n        return sessionStorage.getItem ('userName');\r\n    }\r\n\r\n    getLoggedInUserId() {\r\n        return sessionStorage.getItem ('userId');\r\n    }\r\n\r\n    isUserAuthenticated () {\r\n        let jwtToken = sessionStorage.getItem ('jwtToken')\r\n        console.log (jwtToken)\r\n        if (jwtToken) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n}\r\n\r\nexport default new AuthService()","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\state\\StateComponent.jsx",["210"],"import React, {Component} from 'react'\r\nimport StateService from './StateService'\r\n\r\nclass StateComponent extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n\r\n        this.state = {\r\n            stateList : []\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps (nextProps) {\r\n        console.log ('componentWillReceiveProps....')\r\n        const {selectedCountry} = this.props.selectedCountry\r\n\r\n        console.log ('props param ' + nextProps.selectedCountry)\r\n\r\n        console.log ('this.props ' + this.props)\r\n        console.log ('props.selectedCountry ' + nextProps.selectedCountry)\r\n        console.log ('this.props.selectedCountry ' + this.props.selectedCountry)\r\n        if (nextProps.selectedCountry !== this.props.selectedCountry) {\r\n            this.getStatesByCountry (nextProps.selectedCountry)\r\n        }\r\n    }\r\n\r\n    render () {        \r\n        return (\r\n            <>                \r\n                <label for=\"inputState\">State</label>\r\n                <select id=\"inputState\" className=\"form-control\" name={this.props.componentName.stateId} value={this.props.selectedState.stateId} onChange={this.props.onChangeMethod}>\r\n                    <option key=\"0\" value=\"0\">Choose a State...</option>\r\n                    {                            \r\n                        this.state.stateList.map ((state) => {\r\n                            return (\r\n                                <option key={state.stateId} value={state.stateId}>{state.stateName}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n            </>\r\n        )\r\n    }\r\n\r\n    getStatesByCountry = (countryId) => {\r\n        StateService.getStatesByCountry (countryId)\r\n            .then ((response) => {\r\n                this.setState ({\r\n                    stateList:response.data\r\n                })                    \r\n            })\r\n            .catch ((error) => {\r\n\r\n            })\r\n    }\r\n}\r\n \r\nexport default StateComponent","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\country\\CountryComponent.jsx",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\modal\\ConfirmModalComponent.jsx",["211"],"import React, { Component } from 'react'\r\n\r\nclass ConfirmModalComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log ('ConfirmModalComponent called...')\r\n        return (\r\n            \r\n            <>\r\n                <div class=\"modal fade\" id=\"confirmModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"confirmModalLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"confirmModalLabel\">Confirmation</h5>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            Are you sure you want to save ?\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.props.handleOnClickNo}>Cancel</button>\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.props.handleOnClickYes}>Save</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfirmModalComponent","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\group\\GroupComponent.jsx",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\relationship\\RelationshipComponent.jsx",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\modal\\ConfirmationComponent.jsx",["212"],"import React, { Component } from 'react'\r\n\r\nclass ConfirmationComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h4>{this.props.title}</h4>\r\n                    <p className=\"text-left\">{this.props.subTitle}</p>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div class=\"alert alert-success\" role=\"alert\">\r\n                        {this.props.content}\r\n                    </div>\r\n                \r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleClickOnBack}> {this.props.navigateToBack} </button> &nbsp;\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleClickOnAnother}>{this.props.navigateToOnAnother}</button> &nbsp;\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClickOnBack = () => {\r\n        console.log (this.props.navigateToOnBackLink)\r\n        this.props.history.push (this.props.navigateToOnBackLink)\r\n    }\r\n\r\n    handleClickOnAnother = () => {\r\n        this.props.history.push (this.props.navigateToOnAnotherLink)\r\n    }\r\n}\r\n\r\nexport default ConfirmationComponent","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\contact\\ContactService.js",["213"],"import api from \"../../services/_api\"\r\n\r\nimport ContactModel from '../../models/ContactModel'\r\n\r\nclass ContactService {\r\n    getContacts (userId) {\r\n        return api.get (`contacts/${userId}`)\r\n    }\r\n\r\n    saveContact (contact) {\r\n        return api.put ('contacts', contact)\r\n    }\r\n}\r\n\r\nexport default new ContactService() ","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\ContactModel.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\services\\_api.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\common\\ErrorHandlerComponent.jsx",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\country\\CountryService.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\group\\GroupService.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\state\\StateService.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\components\\relationship\\RelationshipService.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\RoleModel.js",["214"],"const RoleModel = {\r\n    roleId:'',\r\n    roleName:''\r\n}","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\GroupModel.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\StatusModel.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\RelationshipModel.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\StateModel.js",[],"E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\UserModel.js",["215"],"import AuthService from '../services/AuthService'\r\nconst UserModel = {\r\n    userId:0\r\n}\r\n\r\nexport default UserModel","E:\\k.vadivelmurugan\\token-auth-sample\\jwt-auth-react-app\\src\\models\\CountryModel.js",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":19},{"ruleId":"224","severity":1,"message":"225","line":7,"column":5,"nodeType":"226","messageId":"227","endLine":9,"endColumn":6},{"ruleId":"220","severity":1,"message":"228","line":1,"column":28,"nodeType":"222","messageId":"223","endLine":1,"endColumn":38},{"ruleId":"224","severity":1,"message":"225","line":6,"column":5,"nodeType":"226","messageId":"227","endLine":8,"endColumn":6},{"ruleId":"229","severity":1,"message":"230","line":21,"column":37,"nodeType":"231","endLine":21,"endColumn":116},{"ruleId":"232","severity":1,"message":"233","line":25,"column":41,"nodeType":"231","endLine":25,"endColumn":81},{"ruleId":"229","severity":1,"message":"230","line":31,"column":37,"nodeType":"231","endLine":31,"endColumn":116},{"ruleId":"232","severity":1,"message":"233","line":35,"column":41,"nodeType":"231","endLine":35,"endColumn":81},{"ruleId":"229","severity":1,"message":"230","line":41,"column":37,"nodeType":"231","endLine":41,"endColumn":114},{"ruleId":"232","severity":1,"message":"233","line":45,"column":41,"nodeType":"231","endLine":45,"endColumn":81},{"ruleId":"229","severity":1,"message":"230","line":51,"column":37,"nodeType":"231","endLine":51,"endColumn":113},{"ruleId":"232","severity":1,"message":"233","line":55,"column":41,"nodeType":"231","endLine":55,"endColumn":81},{"ruleId":"232","severity":1,"message":"233","line":61,"column":65,"nodeType":"231","endLine":61,"endColumn":106},{"ruleId":"220","severity":1,"message":"234","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":24},{"ruleId":"235","severity":1,"message":"236","line":309,"column":9,"nodeType":"237","messageId":"238","endLine":313,"endColumn":17,"fix":"239"},{"ruleId":"240","severity":1,"message":"241","line":334,"column":13,"nodeType":"242","messageId":"243","endLine":334,"endColumn":20},{"ruleId":"224","severity":1,"message":"225","line":7,"column":5,"nodeType":"226","messageId":"227","endLine":9,"endColumn":6},{"ruleId":"244","severity":1,"message":"245","line":14,"column":203,"nodeType":"246","endLine":14,"endColumn":233},{"ruleId":"220","severity":1,"message":"228","line":7,"column":28,"nodeType":"222","messageId":"223","endLine":7,"endColumn":38},{"ruleId":"247","severity":1,"message":"248","line":36,"column":58,"nodeType":"231","endLine":36,"endColumn":110},{"ruleId":"232","severity":1,"message":"233","line":63,"column":29,"nodeType":"231","endLine":63,"endColumn":184},{"ruleId":"249","severity":1,"message":"250","line":63,"column":29,"nodeType":"231","endLine":63,"endColumn":184},{"ruleId":"232","severity":1,"message":"233","line":67,"column":29,"nodeType":"231","endLine":67,"endColumn":67},{"ruleId":"232","severity":1,"message":"233","line":68,"column":29,"nodeType":"231","endLine":68,"endColumn":67},{"ruleId":"232","severity":1,"message":"233","line":70,"column":29,"nodeType":"231","endLine":70,"endColumn":98},{"ruleId":"251","severity":1,"message":"252","line":82,"column":9,"nodeType":"253","endLine":82,"endColumn":13},{"ruleId":"254","severity":1,"message":"255","line":94,"column":20,"nodeType":"256","messageId":"257","endLine":94,"endColumn":22},{"ruleId":"220","severity":1,"message":"258","line":1,"column":8,"nodeType":"222","messageId":"223","endLine":1,"endColumn":13},{"ruleId":"220","severity":1,"message":"259","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":17},{"ruleId":"220","severity":1,"message":"260","line":15,"column":16,"nodeType":"222","messageId":"223","endLine":15,"endColumn":31},{"ruleId":"224","severity":1,"message":"225","line":5,"column":5,"nodeType":"226","messageId":"227","endLine":7,"endColumn":6},{"ruleId":"224","severity":1,"message":"225","line":5,"column":5,"nodeType":"226","messageId":"227","endLine":7,"endColumn":6},{"ruleId":"220","severity":1,"message":"261","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":20},{"ruleId":"220","severity":1,"message":"262","line":1,"column":7,"nodeType":"222","messageId":"223","endLine":1,"endColumn":16},{"ruleId":"220","severity":1,"message":"221","line":1,"column":8,"nodeType":"222","messageId":"223","endLine":1,"endColumn":19},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'AuthService' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useContext' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Context' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"265","text":"266"},"no-dupe-keys","Duplicate key 'contact'.","ObjectExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'axios' is defined but never used.","'RoleModel' is defined but never used.","'selectedCountry' is assigned a value but never used.","'ContactModel' is defined but never used.","'RoleModel' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[15938,15940],"."]