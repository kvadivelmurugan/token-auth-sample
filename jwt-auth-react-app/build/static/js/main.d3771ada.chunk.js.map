{"version":3,"sources":["contexts/UserContext.js","services/_api.js","services/AuthService.js","components/header/HeaderComponent.jsx","services/ErrorHandlerService.js","components/login/LoginComponent.jsx","components/home/HomeComponent.jsx","components/country/CountryService.js","components/country/CountryComponent.jsx","components/state/StateService.js","components/state/StateComponent.jsx","components/relationship/RelationshipService.js","components/relationship/RelationshipComponent.jsx","components/group/GroupService.js","components/group/GroupComponent.jsx","components/modal/ConfirmModalComponent.jsx","models/ContactModel.js","models/StateModel.js","models/CountryModel.js","models/RelationshipModel.js","models/GroupModel.js","models/StatusModel.js","models/UserModel.js","components/contact/ContactService.js","components/contact/ContactForm.jsx","components/common/ErrorHandlerComponent.jsx","components/contact/ContactList.jsx","components/modal/ConfirmationComponent.jsx","components/contact/ContactConfirm.jsx","components/expense/ExpenseForm.jsx","components/expense/ExpenseList.jsx","components/event/EventForm.jsx","components/event/EventList.jsx","components/notes/NoteForm.jsx","components/notes/NoteList.jsx","components/AuthenticatedRoute.jsx","components/AppComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","isAuthenticated","loggedInUserId","loggedInUserName","roles","registerLogin","username","password","instance","axios","create","baseURL","interceptors","request","use","config","sessionStorage","getItem","headers","userName","console","log","authHeader","this","getAuthHeader","api","post","authorization","get","userId","roleName","setItem","flag","user","JSON","stringify","isUserAuthenticated","removeItem","window","btoa","HeaderComponent","onClickLogout","bind","hasRole","context","isValid","map","role","initialize","setState","id","className","href","src","height","width","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","onClick","AuthService","UnregisterLogin","state","roleList","props","history","push","Component","contextType","withRouter","error","response","status","message","LoginComponent","isValidForm","errors","email","length","handleClickOfLogin","handleOnChange","errorMessage","for","class","autoComplete","placeholder","name","value","onChange","event","preventDefault","doBasicAuth","then","data","catch","ErrorHandlerService","handleError","target","HomeComponent","alt","CountryComponent","getCountries","CountryService","countryList","componentName","countryId","selectedCountry","onChangeMethod","country","countryName","StateComponent","getStatesByCountry","StateService","stateList","nextProps","stateId","selectedState","stateName","RelationshipComponent","getRelatioships","RelationshipService","getRelationships","relationshipList","relationshipId","selectedRelationship","relationship","relationshipName","isError","GroupComponent","getGroups","GroupService","GroupList","groupId","selectedGroup","Group","groupName","ConfirmModalComponent","tabindex","aria-hidden","data-dismiss","handleOnClickNo","handleOnClickYes","ContactModel","contactId","nickName","firstName","lastName","personalEmail","workEmail","primaryAddress","secondaryAddress","city","zip","mobile","homePhone","workPhone","group","statusId","statusName","contact","put","ContactForm","getLoggedInUserId","handleClickOnBack","handleCountryOnChange","handleStateOnChange","handleRelationshipOnChange","handleGroupOnChange","showConfirmDialog","showConfirmModal","handleClickOnYes","ContactService","saveContact","handleClickOnNo","handleOnClickClose","undefined","ErrorHanlderComponent","ContactList","contactList","handleClickOfAddContact","getContacts","scope","ConfirmationComponent","navigateToOnBackLink","handleClickOnAnother","navigateToOnAnotherLink","title","subTitle","content","navigateToBack","navigateToOnAnother","ContactConfirm","ExpenseForm","selected","ExpenseList","handleClickOfAddExpense","defaultValue","EventForm","EventList","handleClickOfAddEvent","NoteForm","NoteList","handleClickOfAddNote","AuthenticatedRoute","to","AppComponent","parse","init","initWithDefaultValue","getLoggedInUserName","getLoggedInUserRoles","Provider","path","exact","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3771ada.chunk.js","sourcesContent":["import React, { Context } from 'react'\r\n\r\nexport const UserContext = React.createContext(\r\n    { \r\n        isAuthenticated: false, \r\n        loggedInUserId: '',\r\n        loggedInUserName: 'k.vadivelmurugan', \r\n        roles: [],\r\n        registerLogin: (username, password) => { } \r\n    })","import axios from 'axios'\r\n\r\nlet baseURL = 'http://localhost:8080/'\r\n\r\nconst instance = axios.create({\r\n  baseURL: baseURL\r\n});\r\n\r\ninstance.interceptors.request.use (\r\n    (config) => {\r\n        if (sessionStorage.getItem ('authHeader')) {                                       \r\n            config.headers['authorization'] = sessionStorage.getItem ('authHeader')                 \r\n        }\r\n        return config\r\n    }\r\n)\r\n\r\nexport default instance","import axios from \"axios\"\r\n\r\nimport api from \"./_api.js\"\r\nimport RoleModel from './../models/RoleModel'\r\nclass AuthService {\r\n\r\n    doBasicAuth (userName, password) {\r\n        console.log (userName + \" \" + password)\r\n\r\n        let authHeader = this.getAuthHeader (userName, password)\r\n\r\n        return api.post ('auth/basic?userName='+userName, \r\n            { }, \r\n            {\r\n                headers: {\r\n                    authorization: authHeader\r\n                    //'Access-Control-Allow-Origin': 'http://localhost:3000',\r\n                    //'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\r\n                }\r\n            })\r\n    }\r\n\r\n    getRoles (userName) {\r\n        return api.get (`roles/${userName}`)\r\n    }\r\n\r\n    registerLogin (userName, password, userId, roleName) {\r\n        console.log ('registerLogin called...')\r\n        sessionStorage.setItem('userName', userName)\r\n        sessionStorage.setItem('userId', userId)\r\n\r\n        let authHeader = this.getAuthHeader(userName, password)\r\n        sessionStorage.setItem('authHeader', authHeader)\r\n        //this.setupAxiosInterceptorForRequest (authHeader)\r\n    }\r\n\r\n    registerLogin (flag, user) {\r\n        console.log ('registerLogin called...')\r\n        sessionStorage.setItem('userName', user.userName)\r\n        sessionStorage.setItem('userId', user.userId)\r\n\r\n        let authHeader = this.getAuthHeader(user.userName, user.password)\r\n        sessionStorage.setItem('authHeader', authHeader)\r\n        //this.setupAxiosInterceptorForRequest (authHeader)\r\n        sessionStorage.setItem ('isAuthenticated', flag)\r\n        sessionStorage.setItem ('user', JSON.stringify(user))\r\n    }\r\n\r\n    setupAxiosInterceptorForRequest (authHeader) {\r\n        console.log ('interceptors called') \r\n        axios.interceptors.request.use (\r\n            (config) => {\r\n                if (this.isUserAuthenticated ()) {                                       \r\n                    config.headers['authorization'] = authHeader                  \r\n                }\r\n                return config\r\n            }\r\n        )\r\n    }\r\n\r\n    UnregisterLogin (userName) {\r\n        sessionStorage.removeItem('userName')\r\n        sessionStorage.removeItem('userId')\r\n        sessionStorage.removeItem('authHeader')\r\n        sessionStorage.removeItem('user')\r\n        sessionStorage.removeItem ('isAuthenticated')\r\n    } \r\n\r\n    getLoggedInUserName() {\r\n        return sessionStorage.getItem ('userName');\r\n    }\r\n\r\n    getLoggedInUserRoleName() {\r\n        return sessionStorage.getItem ('roleName');\r\n    }\r\n\r\n    getLoggedInUserId() {\r\n        return sessionStorage.getItem ('userId');\r\n    }\r\n\r\n    getAuthHeader (userName, password) {\r\n        return 'Basic ' + window.btoa(userName + \":\" + password)\r\n    }\r\n\r\n    isUserAuthenticated () {\r\n        let userName = sessionStorage.getItem ('authHeader')\r\n        console.log (userName)\r\n        if (userName) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n}\r\n\r\nexport default new AuthService()","/**\r\n * This is the HeaderComponent\r\n * \r\n * \r\n * Developed by vini technology solutions\r\n */\r\nimport React, { Component, useContext } from 'react'\r\nimport {withRouter} from 'react-router'\r\n\r\nimport AuthService from '../../services/AuthService'\r\n\r\nimport { UserContext } from '../../contexts/UserContext'\r\n\r\nimport './HeaderComponent.css'\r\n\r\nclass HeaderComponent extends Component {\r\n    static contextType = UserContext;\r\n\r\n    componentDidMount () {\r\n        console.log ('componentDidMount...')\r\n        this.initialize()\r\n    }\r\n\r\n    onClickLogout = this.onClickLogout.bind(this)\r\n\r\n    render () {\r\n        console.log ('...render...')\r\n        const isUserAuthenticated = this.context.isAuthenticated\r\n        const loggedInUserName = this.context.loggedInUserName\r\n        console.log (' isUserAuthenticated :: ' + isUserAuthenticated)\r\n        console.log (' loggedInUserName :: ' + this.context.loggedInUserName)\r\n        \r\n        return (\r\n            \r\n            <nav id=\"navMain\" className=\"navbar navbar-expand-lg navbar-dark bg-faded\">\r\n                <a className=\"navbar-brand\" href=\"/home\"><img src=\"/images/logo.jpg\" height=\"20\" width=\"20\"/></a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                    <ul className=\"navbar-nav\">\r\n                        {isUserAuthenticated && <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"/home\">Home<span className=\"sr-only\">(current)</span></a>\r\n                        </li>}\r\n                        {isUserAuthenticated && this.hasRole ('ROLE_CONTACTS') &&  <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/contacts\">Contacts</a>\r\n                        </li>}\r\n                        {isUserAuthenticated && this.hasRole ('ROLE_EXPENSES') &&  <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/expenses\">Expenses</a>\r\n                        </li>}\r\n                        {isUserAuthenticated && this.hasRole ('ROLE_EVENTS') && <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/events\">Events</a>\r\n                        </li>}                        \r\n                        {isUserAuthenticated && this.hasRole ('ROLE_NOTES') &&  <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/notes\">Notes</a>\r\n                        </li>}                                              \r\n                    </ul>\r\n                    \r\n                    {isUserAuthenticated && \r\n                    <ul className=\"nav ml-auto\">\r\n                        <li className=\"nav-item dropdown\"> \r\n                            <a className=\"nav-link dropdown-toggle navbar-text\" href=\"#\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                {loggedInUserName}\r\n                            </a>\r\n                            <div id=\"navDropDown\" className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                            <a className=\"dropdown-item\" href=\"#\">Account</a>\r\n                            <a className=\"dropdown-item\" href=\"#\">Preferences</a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item\" href=\"#\" onClick = {this.onClickLogout}>Logout</a>\r\n                            </div>\r\n                        </li> \r\n                    </ul>}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    onClickLogout () {\r\n        AuthService.UnregisterLogin();\r\n        this.context.registerLogin (false, {})\r\n        this.state = {\r\n            roleList :[]\r\n        }\r\n        this.props.history.push ('/login')\r\n    }\r\n\r\n    hasRole = (roleName) => {\r\n        let roles = this.context.roles\r\n        console.log (roles)\r\n        console.log ('roleName : ' + roleName)\r\n        let isValid = false\r\n        roles.map (\r\n            (role) => {\r\n                console.log (role.roleName)\r\n                if (role.roleName === roleName) {\r\n                    console.log ('present')\r\n                    isValid = true\r\n                }\r\n            }\r\n        )\r\n        return isValid\r\n    }\r\n\r\n    initialize = () => {\r\n        this.setState ({\r\n            isUserAuthenticated: this.context.isAuthenticated,\r\n            loggedInUserId: this.context.loggedInUserId,\r\n            loggedInUserName: this.context.loggedInUserName,\r\n            roles: this.context.roles\r\n        })\r\n        console.log ('...initialized...')\r\n    }\r\n}\r\n\r\nexport default withRouter(HeaderComponent)","class ErrorHandlerService {\r\n    handleError (error) {\r\n        if (error.response && error.response.status === 401) {\r\n            return \"Invalid username or password\"\r\n        }\r\n\r\n        if (error.response && error.response.status === 403) {\r\n            return \"You are not authorized to access this resource, please raise a ticket to get the access\"\r\n        }\r\n\r\n        if (error.response && error.response.status === 500) {\r\n            return \"Unknown error, please contact support\"\r\n        }\r\n\r\n        if (error.message && error.message === \"Network Error\") {\r\n            return \"Unable to connect the service, please contact support\"\r\n        }\r\n        return error.message\r\n    }\r\n}\r\nexport default new ErrorHandlerService()","import React, { Component, useContext } from 'react'\r\nimport { UserContext } from '../../contexts/UserContext.js'\r\nimport ErrorHandlerService from '../../services/ErrorHandlerService.js'\r\nimport AuthService from '../../services/AuthService.js'\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleClickOfLogin = this.handleClickOfLogin.bind(this)\r\n        this.handleOnChange = this.handleOnChange.bind(this)\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errorMessage: '',\r\n            errors : {\r\n                email: '',\r\n                password: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    static contextType = UserContext;\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>                    \r\n                </div>\r\n\r\n                <div className=\"card col-4 offset-md-8\">\r\n                    <div className=\"card-header bg-light text-center\">\r\n                        <h4>Login</h4>\r\n                        <h6 className=\"text-danger\">{this.state.errorMessage}</h6>\r\n                    </div>\r\n                    <div className=\"card-body text-left\">\r\n                        <form>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label for=\"inputEmail\" >Email</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" name=\"email\" value={this.state.email} onChange={this.handleOnChange}/>\r\n                                <p class=\"text-danger\">{this.state.errors.email}</p>\r\n                            </div>\r\n                        \r\n                        \r\n                            <div className=\"form-group\">\r\n                                <label for=\"inputPassword\">Password</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                                <input type=\"Password\" autoComplete=\"off\" className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.handleOnChange}/>\r\n                                <p class=\"text-danger\">{this.state.errors.password}</p>\r\n                            </div>\r\n                            \r\n                            \r\n                            <div className=\"form-group text-center\">                                    \r\n                                <button type=\"button\" className=\"btn btn-primary text-nowrap\" onClick={this.handleClickOfLogin}>Login</button> &nbsp;\r\n                                <button type=\"reset\" className=\"btn btn-primary text-nowrap\">Reset</button>\r\n                            </div>\r\n                            \r\n                        </form>                        \r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    handleClickOfLogin (event) {\r\n        event.preventDefault()\r\n        \r\n        if (this.isValidForm()) {\r\n            AuthService.doBasicAuth (this.state.email, this.state.password)\r\n                .then((response) => {\r\n                    console.log ('auth success' + response.data.userId)\r\n                    console.log ('ROLE ' + response.data.roleList[0].roleName)\r\n                    //AuthService.registerLogin (this.state.email, this.state.password, response.data.userId, response.data.roleList[0].roleName)\r\n                    AuthService.registerLogin (true, response.data)\r\n                    this.context.registerLogin (true, response.data)\r\n                    this.props.history.push (\"/home\")\r\n                }).catch(\r\n                (error) => {\r\n                    this.setState ({\r\n                        errorMessage : ErrorHandlerService.handleError (error) \r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    handleOnChange (event) {\r\n        this.setState ({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    isValidForm = () => {\r\n        let isValid = true;\r\n        let errors = this.state.errors\r\n\r\n        console.log (this.state.email)\r\n        if (this.state.email.length <= 0) {\r\n            isValid = false\r\n            errors.email = 'Please enter email'\r\n        }\r\n        \r\n        if (this.state.password.length < 4) {\r\n            isValid = false\r\n            errors.password = 'Please enter password'\r\n        }\r\n\r\n        this.setState ({\r\n            errors: errors\r\n        })\r\n        console.log (isValid)\r\n        return isValid;\r\n    }\r\n}\r\n\r\nexport default LoginComponent","import React, { Component } from 'react'\r\n\r\nimport './HomeComponent.css'\r\n\r\nclass HomeComponent extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>                \r\n                <div className=\"card text-left\">\r\n                    <div className=\"card-header bg-transparent\">\r\n                        <h4>Home</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-3\">\r\n                                <div className=\"card\">\r\n                                    <img className=\"card-img-top\" src=\"images/contacts.jpg\" alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Contacts</h5>\r\n                                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                                    </div>\r\n                                </div>                  \r\n                            </div>                        \r\n                            <div className=\"col-sm-3\">\r\n                                <div className=\"card\">\r\n                                    <img className=\"card-img-top\" src=\"images/expenses.jpg\" alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Expenses</h5>\r\n                                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                                    </div>\r\n                                </div>                  \r\n                            </div>                        \r\n                            <div className=\"col-sm-3\">\r\n                                <div className=\"card\">\r\n                                    <img className=\"card-img-top\" src=\"images/events.jpg\" alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Events</h5>\r\n                                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                                    </div>\r\n                                </div>                  \r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                                <div className=\"card\">\r\n                                    <img className=\"card-img-top\" src=\"images/notes.png\" alt=\"Card image cap\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">Notes</h5>\r\n                                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n                                    </div>\r\n                                </div>                  \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-footer bg-transparent\"><a href=\"#\" className =\"btn btn-primary\">Go somewhere</a></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default HomeComponent","import api from '../../services/_api'\r\n\r\nclass CountryService {\r\n    getCountries () {\r\n        return api.get (`/countries`)\r\n    }\r\n}\r\n\r\nexport default new CountryService()","import React, {Component} from 'react'\r\nimport CountryService from './CountryService'\r\n\r\nclass CountryComponent extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n\r\n        this.state = {\r\n            countryList : []\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getCountries ()\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <label for=\"inputCountry\">Country</label>\r\n                <select id=\"inputCountry\" className=\"form-control\" name={this.props.componentName.countryId} value={this.props.selectedCountry.countryId} onChange={this.props.onChangeMethod}>\r\n                    <option key=\"0\" value=\"0\">Choose a Country...</option>\r\n                    {                            \r\n                        this.state.countryList.map ((country) => {\r\n                            return (\r\n                                <option key={country.countryId} value={country.countryId}>{country.countryName}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n            </>\r\n        )\r\n    }\r\n\r\n    getCountries = () => {\r\n        CountryService.getCountries ()\r\n            .then ((response) => {\r\n                this.setState ({\r\n                    countryList:response.data\r\n                })                    \r\n            })\r\n            .catch ((error) => {\r\n\r\n            })\r\n    }\r\n}\r\n \r\nexport default CountryComponent","import api from '../../services/_api'\r\n\r\nclass StateService {\r\n    getStatesByCountry (countryId) {\r\n        return api.get (`/states/${countryId}`)\r\n    }\r\n}\r\n\r\nexport default new StateService()","import React, {Component} from 'react'\r\nimport StateService from './StateService'\r\n\r\nclass StateComponent extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n\r\n        this.state = {\r\n            stateList : []\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps (nextProps) {\r\n        console.log ('componentWillReceiveProps....')\r\n        const {selectedCountry} = this.props.selectedCountry\r\n\r\n        console.log ('props param ' + nextProps.selectedCountry)\r\n\r\n        console.log ('this.props ' + this.props)\r\n        console.log ('props.selectedCountry ' + nextProps.selectedCountry)\r\n        console.log ('this.props.selectedCountry ' + this.props.selectedCountry)\r\n        if (nextProps.selectedCountry !== this.props.selectedCountry) {\r\n            this.getStatesByCountry (nextProps.selectedCountry)\r\n        }\r\n    }\r\n\r\n    render () {        \r\n        return (\r\n            <>                \r\n                <label for=\"inputState\">State</label>\r\n                <select id=\"inputState\" className=\"form-control\" name={this.props.componentName.stateId} value={this.props.selectedState.stateId} onChange={this.props.onChangeMethod}>\r\n                    <option key=\"0\" value=\"0\">Choose a State...</option>\r\n                    {                            \r\n                        this.state.stateList.map ((state) => {\r\n                            return (\r\n                                <option key={state.stateId} value={state.stateId}>{state.stateName}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n            </>\r\n        )\r\n    }\r\n\r\n    getStatesByCountry = (countryId) => {\r\n        StateService.getStatesByCountry (countryId)\r\n            .then ((response) => {\r\n                this.setState ({\r\n                    stateList:response.data\r\n                })                    \r\n            })\r\n            .catch ((error) => {\r\n\r\n            })\r\n    }\r\n}\r\n \r\nexport default StateComponent","import api from '../../services/_api'\r\n\r\nclass RelationshipService {\r\n    getRelationships () {\r\n        return api.get (`/relationships`)\r\n    }\r\n}\r\n\r\nexport default new RelationshipService()","import React, {Component} from 'react'\r\nimport RelationshipService from './RelationshipService'\r\n\r\nclass RelationshipComponent extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n\r\n        this.state = {\r\n            relationshipList : []\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getRelatioships()\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <label for=\"inputRelationship\">Relationship</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                <select id=\"inputRelationship\" className=\"form-control\" name={this.props.componentName.relationshipId} value={this.props.selectedRelationship.relationshipId} onChange={this.props.onChangeMethod}>\r\n                    <option key=\"0\" value=\"0\">Choose a Relationship...</option>\r\n                    {                            \r\n                        this.state.relationshipList.map ((relationship) => {\r\n                            return (\r\n                                <option key={relationship.relationshipId} value={relationship.relationshipId}>{relationship.relationshipName}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n                <p class=\"text-danger\">{this.props.isError}</p>                 \r\n            </>\r\n        )\r\n    }\r\n\r\n    getRelatioships = () => {\r\n        RelationshipService.getRelationships ()\r\n        .then ((response) => {\r\n            this.setState ({\r\n                relationshipList:response.data\r\n            })                    \r\n        })\r\n        .catch ((error) => {\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default RelationshipComponent","import api from '../../services/_api'\r\n\r\nclass GroupService {\r\n    getGroups () {\r\n        return api.get (`/groups`)\r\n    }\r\n}\r\n\r\nexport default new GroupService()","import React, {Component} from 'react'\r\nimport GroupService from './GroupService'\r\n\r\nclass GroupComponent extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n\r\n        this.state = {\r\n            GroupList : []\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getGroups()\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <label for=\"inputGroup\">Group</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                <select id=\"inputGroup\" className=\"form-control\" name={this.props.componentName.groupId} value={this.props.selectedGroup.groupId} onChange={this.props.onChangeMethod}>\r\n                    <option key=\"0\" value=\"0\">Choose a Group...</option>\r\n                    {                            \r\n                        this.state.GroupList.map ((Group) => {\r\n                            return (\r\n                                <option key={Group.groupId} value={Group.groupId}>{Group.groupName}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>    \r\n                <p class=\"text-danger\">{this.props.isError}</p>           \r\n            </>\r\n        )\r\n    }\r\n\r\n    getGroups = () => {\r\n        GroupService.getGroups ()\r\n        .then ((response) => {\r\n            this.setState ({\r\n                GroupList:response.data\r\n            })                    \r\n        })\r\n        .catch ((error) => {\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default GroupComponent","import React, { Component } from 'react'\r\n\r\nclass ConfirmModalComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log ('ConfirmModalComponent called...')\r\n        return (\r\n            \r\n            <>\r\n                <div class=\"modal fade\" id=\"confirmModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"confirmModalLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\" id=\"confirmModalLabel\">Confirmation</h5>\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            Are you sure you want to save ?\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.props.handleOnClickNo}>Cancel</button>\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.props.handleOnClickYes}>Save</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConfirmModalComponent","import GroupModel from './GroupModel'\r\nimport RelationshipModel from './RelationshipModel'\r\nimport CountryModel from './CountryModel'\r\nimport StateModel from './StateModel'\r\nimport UserModel from './UserModel'\r\nimport StatusModel from './StatusModel'\r\n\r\nconst ContactModel = {\r\n    contactId : '', \r\n\tnickName : '', \r\n\tfirstName : '', \r\n\tlastName : '', \r\n\tpersonalEmail : '',\r\n\tworkEmail : '',\r\n\tprimaryAddress : '',\r\n\tsecondaryAddress : '',\r\n\tcity : '',\r\n\tstate : StateModel,\r\n\tcountry : CountryModel,\r\n\tzip : '',\r\n\tmobile : '',\r\n\thomePhone : '',\r\n\tworkPhone : '',\r\n\trelationship : RelationshipModel,\r\n\tgroup : GroupModel,\t\r\n\tstatus : StatusModel,\r\n\tuser : UserModel\r\n}\r\n\r\nexport default ContactModel","const StateModel = {\r\n    stateId : '', \r\n    stateName : '',\r\n    countryId : ''\r\n}\r\n\r\nexport default StateModel","const CountryModel = {\r\n    countryId : '', \r\n\tcountryName : ''\r\n}\r\n\r\nexport default CountryModel","const RelationshipModel = {\r\n    relationshipId : '', \r\n\trelationshipName : ''\r\n}\r\n\r\nexport default RelationshipModel","const GroupModel = {\r\n    groupId : '', \r\n\tgroupName : ''\r\n}\r\n\r\nexport default GroupModel","const StatusModel = {\r\n    statusId : 0,\r\n    statusName : ''\r\n}\r\nexport default StatusModel","import AuthService from '../services/AuthService'\r\nconst UserModel = {\r\n    userId:0\r\n}\r\n\r\nexport default UserModel","import api from \"../../services/_api\"\r\n\r\nimport ContactModel from '../../models/ContactModel'\r\n\r\nclass ContactService {\r\n    getContacts (userId) {\r\n        return api.get (`contacts/${userId}`)\r\n    }\r\n\r\n    saveContact (contact) {\r\n        return api.put ('contacts', contact)\r\n    }\r\n}\r\n\r\nexport default new ContactService() ","\r\nimport React, { Component } from 'react'\r\n\r\nimport CountryComponent from '../country/CountryComponent.jsx'\r\nimport StateComponent from '../state/StateComponent.jsx'\r\nimport RelationshipComponent from '../relationship/RelationshipComponent.jsx'\r\nimport GroupComponent from '../group/GroupComponent.jsx'\r\n\r\nimport ConfirmModalComponent from '../modal/ConfirmModalComponent.jsx'\r\nimport ContactModel from '../../models/ContactModel'\r\n\r\nimport AuthService from '../../services/AuthService'\r\nimport ContactService from './ContactService'\r\n\r\nclass ContactForm extends Component {\r\n    constructor(props) {\r\n        console.log ('getLoggedInUserId ' + AuthService.getLoggedInUserId())\r\n        super(props)\r\n\r\n        this.state = {\r\n            contact : ContactModel,\r\n            showConfirmModal : false,\r\n            isValid : false,\r\n            errors : {\r\n                nickName : '',\r\n                personalEmail : '',\r\n                primaryAddress : '',\r\n                relationship : '',\r\n                group : ''\r\n            }        \r\n        }              \r\n    }\r\n\r\n    componentDidMount () {\r\n        this.initialize () \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h4>Contacts</h4>\r\n                    <p className=\"text-left\">Contacts {\">\"} Add</p>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form autoComplete=\"off\">\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label for=\"inputNickName4\">Nick name</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                                <input type=\"hidden\" className=\"form-control\" id=\"inputUserId\" placeholder=\"userId\" name=\"userId\" value={this.state.contact.nickName}/>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputNickName4\" placeholder=\"Nick name\" name=\"nickName\" value={this.state.contact.nickName} onChange={this.handleOnChange}/>\r\n                                <p class=\"text-danger\">{this.state.errors.nickName}</p>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label for=\"inputFirstname4\">First name</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputFirstname4\" placeholder=\"First name\" name=\"firstName\" value={this.state.contact.firstName} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label for=\"inputLastname4\">Last name</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputLastname4\" placeholder=\"Last name\" name=\"lastName\" value={this.state.contact.lastName} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label for=\"inputPersonalEmail4\">Personal Email</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                                <input type=\"email\" autoComplete=\"off\" className=\"form-control\" id=\"inputPersonalEmail4\" placeholder=\"Primary Email\" name=\"personalEmail\" value={this.state.contact.personalEmail} onChange={this.handleOnChange}/>\r\n                                <p class=\"text-danger\">{this.state.errors.personalEmail}</p>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label for=\"inputWorkEmail4\">Office Email</label>\r\n                                <input type=\"email\" autoComplete=\"off\" className=\"form-control\" id=\"inputWorkEmail4\" placeholder=\"Secondary Email\" name=\"workEmail\" value={this.state.contact.workEmail} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"inputAddress\">Door# / Block# / Apartment Name</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                            <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputAddress\" placeholder=\"Door# / Block# / Apartment Name\" name=\"primaryAddress\" value={this.state.contact.primaryAddress} onChange={this.handleOnChange}/>\r\n                            <p class=\"text-danger\">{this.state.errors.primaryAddress}</p>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"inputAddress2\">Street Name / Area Name</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                            <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Street Name / Area Name\" name=\"secondaryAddress\" value={this.state.contact.secondaryAddress} onChange={this.handleOnChange}/>\r\n                            <p class=\"text-danger\">{this.state.errors.secondaryAddress}</p>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-3\">\r\n                                {/* <label for=\"inputState\">State</label>\r\n                                <select id=\"inputState\" className=\"form-control\">\r\n                                    <option selected>Choose...</option>\r\n                                    <option>...</option>\r\n                                </select> */ }\r\n\r\n                                <CountryComponent componentName=\"country\" selectedCountry={this.state.contact.country} onChangeMethod={this.handleCountryOnChange} /> \r\n\r\n                                {/* <label for=\"inputCountry\">Country</label>\r\n                                <select id=\"inputCountry\" className=\"form-control\" name=\"countryId\" \r\n                                    value={this.state.contact.countryId}\r\n                                    onChange={this.handleOnChange}>\r\n                                    <option key=\"0\" value=\"0\">Choose a Country...</option>\r\n                                    {                            \r\n                                        this.state.countryList.map ((country) => {\r\n                                            return (\r\n                                                <option key={country.countryId} value={country.countryId}>{country.countryName}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select> */}\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                {/* <label for=\"inputState\">State</label>\r\n                                <select id=\"inputState\" className=\"form-control\">\r\n                                    <option selected>Choose...</option>\r\n                                    <option>...</option>\r\n                                </select> */}\r\n\r\n                                <StateComponent componentName=\"state\" selectedCountry={this.state.contact.country.countryId}  selectedState={this.state.contact.state} onChangeMethod={this.handleStateOnChange}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label for=\"inputCity\">City</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputCity\" placeholder=\"City Name\" name=\"city\" value={this.state.contact.city} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputZip\">Zip</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputZip\" name=\"zip\" value={this.state.contact.zip} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputMobile\">Mobile #</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputMobile\" name=\"mobile\" value={this.state.contact.mobile} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputHome\">Home #</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputHome\" name=\"homePhone\" value={this.state.contact.homePhone} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputWork\">Work #</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputWork\" name=\"workPhone\" value={this.state.contact.workPhone} onChange={this.handleOnChange}/>                                \r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <RelationshipComponent autoComplete=\"off\" componentName=\"relationship\" selectedRelationship={this.state.contact.relationship} onChangeMethod={this.handleRelationshipOnChange} isError={this.state.errors.relationship}/> \r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <GroupComponent autoComplete=\"off\" componentName=\"group\" selectedGroup={this.state.contact.group} onChangeMethod={this.handleGroupOnChange} isError={this.state.errors.group}/> \r\n                            </div>                                                       \r\n\r\n                        </div>                        \r\n                        <div className=\"form-row\">\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.showConfirmDialog} data-target={this.state.isValid ? \"#confirmModal\" : undefined} data-toggle='modal'  >Submit</button> &nbsp;\r\n                        <button type=\"button\" className=\"btn btn-primary\">Reset</button> &nbsp;\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleClickOnBack}>Back</button>\r\n                    </form>\r\n\r\n                    <ConfirmModalComponent handleOnClickYes={this.handleClickOnYes} handleOnClickNo={this.handleClickOnNo}/>\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n    \r\n    handleClickOnBack = () => {\r\n        this.props.history.push (\"/contacts\")\r\n        console.log (this.state.contact)    \r\n    }\r\n\r\n    handleOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n        this.setState ({\r\n            contact: { ...this.state.contact, [event.target.name]: event.target.value }\r\n        })\r\n        console.log ('country ' + this.state.contact.countryId)\r\n    }\r\n\r\n    handleCountryOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n\r\n        let country = this.state.contact.country\r\n\r\n        country.countryId = event.target.value\r\n\r\n        this.setState ({\r\n            contact: { ...this.state.contact, country: country }\r\n        })\r\n        console.log ('country ' + this.state.contact.country.countryId)\r\n    }\r\n\r\n    handleStateOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n\r\n        let state = this.state.contact.state\r\n\r\n        state.stateId = event.target.value\r\n\r\n        this.setState ({\r\n            contact: { ...this.state.contact, state: state }\r\n        })\r\n        console.log ('state ' + this.state.contact.state.stateId)\r\n    }    \r\n\r\n    handleRelationshipOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n\r\n        let relationship = this.state.contact.relationship\r\n\r\n        relationship.relationshipId = event.target.value\r\n\r\n        this.setState ({\r\n            contact: { ...this.state.contact, relationship: relationship }\r\n        })\r\n        console.log ('relationship ' + this.state.contact.relationship.relationshipId)\r\n    }    \r\n\r\n    handleGroupOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n\r\n        let group = this.state.contact.group\r\n\r\n        group.groupId = event.target.value\r\n\r\n        this.setState ({\r\n            contact: { ...this.state.contact, group: group }\r\n        })\r\n        console.log ('group ' + this.state.contact.group.groupId)\r\n    }   \r\n    \r\n    showConfirmDialog = (event) => {\r\n        console.log ('showConfirm')\r\n        event.preventDefault()\r\n        if (this.isValidForm()) {\r\n            this.setState ( {\r\n                showConfirmModal : !this.state.showConfirmModal\r\n            })\r\n        }\r\n    }\r\n\r\n    isValidForm = () => {\r\n        \r\n        let isValid = true;\r\n\r\n        let errors = {\r\n            nickName : '',\r\n            personalEmail : '',\r\n            primaryAddress : '',\r\n            relationship : '',\r\n            group : ''\r\n        }\r\n\r\n        let contact = this.state.contact\r\n\r\n        console.log ('this.state.contact.nickName ' + this.state.contact.nickName)\r\n        if (!contact.nickName) {\r\n            isValid = false\r\n            errors.nickName = 'Please enter Nick Name'\r\n        }\r\n\r\n        if (!this.state.contact.personalEmail) {\r\n            isValid = false\r\n            errors.personalEmail = 'Please enter Personal Email'\r\n        }\r\n\r\n        if (!this.state.contact.primaryAddress) {\r\n            isValid = false\r\n            errors.primaryAddress = 'Please enter Primary Address'\r\n        }\r\n\r\n        if (!this.state.contact.relationship.relationshipId) {\r\n            isValid = false\r\n            errors.relationship = 'Please choose the Relationship'\r\n        }\r\n\r\n        console.log ('this.state.contact.group.groupId  ' + this.state.contact.group.groupId )\r\n        if (!   this.state.contact.group.groupId) {\r\n            isValid = false\r\n            errors.group = 'Please choose the Group'\r\n        }\r\n        console.log ('isValid ' + isValid)\r\n        this.setState ({\r\n            isValid : isValid,\r\n            errors: errors\r\n        })\r\n        \r\n        return isValid\r\n    }\r\n\r\n    handleClickOnYes = () => {\r\n        console.log ('Yes')    \r\n        ContactService.saveContact (this.state.contact)\r\n            .then ((response) => {\r\n                console.log ('contact saved...') \r\n                this.props.history.push ('/contacts/confirm')\r\n            }) \r\n            .catch ( (response) => {\r\n                console.log ('contact save failed...')    \r\n            })\r\n    }\r\n\r\n    handleClickOnNo = () => {\r\n        console.log ('No')    \r\n\r\n    }\r\n\r\n    handleClickOnYes = () => {\r\n        console.log ('Yes')    \r\n        ContactService.saveContact (this.state.contact).then ( (response) => {\r\n                console.log ('contact saved...')  \r\n                this.props.history.push (\"/contacts/confirm\")  \r\n            }\r\n        ) .catch ( (response) => {\r\n                console.log ('contact save failed...')    \r\n            }\r\n        )\r\n    }\r\n\r\n    handleOnClickClose = () => {\r\n        console.log ('No')    \r\n\r\n    }\r\n\r\n    initialize = () => {\r\n        console.log ('pre-initialize ' + this.state.contact)\r\n        let user = this.state.contact.user\r\n        user.userId = AuthService.getLoggedInUserId()\r\n\r\n        let status = this.state.contact.status\r\n        status.statusId = 100\r\n          \r\n        this.setState ({\r\n            contact: { ...this.state.contact, user: user },\r\n            contact: { ...this.state.contact, status: status }\r\n        }) \r\n    }\r\n\r\n}\r\nexport default ContactForm","import React, { Component } from 'react'\r\n\r\nimport ErrorHandlerService from '../../services/ErrorHandlerService'\r\n\r\nclass ErrorHanlderComponent extends Component {\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <>\r\n               <p className=\"text-center text-danger\">{ErrorHandlerService.handleError (this.props.error)}</p>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorHanlderComponent","\r\nimport React, { Component } from 'react'\r\nimport AuthService from '../../services/AuthService'\r\nimport ContactService from './ContactService'\r\nimport ErrorHanlderComponent from '../common/ErrorHandlerComponent'\r\n\r\nclass ContactList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            contactList : [],\r\n            error : ''\r\n        }\r\n\r\n        this.handleClickOfAddContact = this.handleClickOfAddContact.bind(this)\r\n        this.getContacts = this.getContacts.bind(this)\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n        this.getContacts()\r\n        console.log (\"Contact List \" + this.state.contactList)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h4>Contacts</h4>\r\n                    <p className=\"text-left\">Contacts {\">\"} List</p>\r\n                    {this.state.error && <ErrorHanlderComponent error = {this.state.error}/>}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div class=\"col-md-10\">\r\n                            <p>\r\n                                <a class=\"btn btn-primary\" data-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                                    Search\r\n                                </a>\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"col-md-2 text-right\">\r\n                            <label for=\"btnAddContact\">&nbsp;</label>\r\n                            <button type=\"button\" className=\"btn btn-primary text-nowrap\" onClick={this.handleClickOfAddContact}>Add Contact</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"collapse\" id=\"collapseExample\">\r\n                        <form>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group col-md-2\">\r\n                                    <label for=\"inputName4\">Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputName4\" placeholder=\"Name\" />\r\n                                </div>\r\n                                <div className=\"form-group col-md-2\">\r\n                                    <label for=\"inputEmail4\">Email</label>\r\n                                    <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\" />\r\n                                </div>\r\n                                <div className=\"form-group col-md-2\">\r\n                                    <label for=\"inputMobile\">Mobile #</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"inputMobile\" />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-1\">\r\n                                    <label for=\"btnSubmit\">&nbsp;</label>\r\n                                    <button type=\"button\" className=\"form-control btn btn-primary\">Submit</button> &nbsp;\r\n                                </div>\r\n                                <div className=\"form-group col-md-1\">\r\n                                    <label for=\"btnReset\">&nbsp;</label>\r\n                                    <button type=\"reset\" className=\"form-control btn btn-primary\">Reset</button> &nbsp;\r\n                                </div>\r\n\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <table className=\"table\">\r\n                        <thead className=\"table-primary\">\r\n                            <tr>\r\n                                <th scope=\"col\">Nick name</th>\r\n                                <th scope=\"col\">First Name</th>\r\n                                <th scope=\"col\">Personal Email</th>\r\n                                <th scope=\"col\">Mobile</th>\r\n                                <th scope=\"col\">Relationship</th>\r\n                                <th scope=\"col\">Group</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.contactList.map (\r\n                                    (contact) => {\r\n                                        return (\r\n                                            <tr>                                \r\n                                                <td>{contact.nickName}</td>\r\n                                                <td>{contact.firstName}</td>\r\n                                                <td>{contact.personalEmail}</td>\r\n                                                <td>{contact.mobile}</td>\r\n                                                <td>{contact.relationship.relationshipName}</td>  \r\n                                                <td>{contact.group.groupName}</td>                               \r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClickOfAddContact() {\r\n        this.props.history.push(\"/contacts/add\")\r\n    }\r\n\r\n    getContacts () {\r\n        let userId = AuthService.getLoggedInUserId ();\r\n        \r\n        ContactService.getContacts (userId)\r\n        .then ((response) => {\r\n            console.log ('response ' + response.data)\r\n            this.setState ({\r\n                contactList : response.data\r\n            })\r\n        }).catch ((error) => {\r\n            this.setState ({\r\n                error : error\r\n            }) \r\n        })\r\n    }\r\n}\r\n\r\nexport default ContactList","import React, { Component } from 'react'\r\n\r\nclass ConfirmationComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h4>{this.props.title}</h4>\r\n                    <p className=\"text-left\">{this.props.subTitle}</p>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div class=\"alert alert-success\" role=\"alert\">\r\n                        {this.props.content}\r\n                    </div>\r\n                \r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleClickOnBack}> {this.props.navigateToBack} </button> &nbsp;\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleClickOnAnother}>{this.props.navigateToOnAnother}</button> &nbsp;\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClickOnBack = () => {\r\n        console.log (this.props.navigateToOnBackLink)\r\n        this.props.history.push (this.props.navigateToOnBackLink)\r\n    }\r\n\r\n    handleClickOnAnother = () => {\r\n        this.props.history.push (this.props.navigateToOnAnotherLink)\r\n    }\r\n}\r\n\r\nexport default ConfirmationComponent","import React, { Component } from 'react'\r\n\r\nimport ConfirmationComponent from '../modal/ConfirmationComponent.jsx'\r\n\r\nclass ContactConfirm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n           <ConfirmationComponent title=\"Contacts\" subTitle=\"Contacts > Confirm\" content=\"Your contact is saved successfully !!!\" navigateToBack=\"Contact List\" navigateToOnAnother=\"Add Another Contact\" navigateToBack =\"Contact List\" navigateToOnAnotherLink=\"/contacts/add\" navigateToOnBackLink=\"/contacts/\" history={this.props.history} /> \r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactConfirm","\r\nimport React, { Component } from 'react'\r\n\r\nclass ExpenseForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClickOnBack = this.handleClickOnBack.bind(this)             \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h4>Expenses</h4>\r\n                    <p className=\"text-left\">Expenses {\">\"} Add</p>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 border-right border-primary\">\r\n                            <form>                        \r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label for=\"inputExpenseDate\">Date</label>\r\n                                        <input type=\"date\" id=\"inputExpenseDate\" name=\"expenseDate\" className=\"form-control\" />                                \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label for=\"inputExpenseDesc\">Description</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"inputExpenseDesc\" placeholder=\"Description\" />\r\n                                    </div>                \r\n                                </div>            \r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label for=\"inputExpenseCategory\">Category</label>\r\n                                        <select id=\"inputExpenseCategory\" className=\"form-control\">\r\n                                            <option selected>Choose...</option>\r\n                                            <option>...</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label for=\"inputExpenseAmount\">Amount</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"inputExpenseAmount\" placeholder=\"Amount\" />\r\n                                    </div>                            \r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button> &nbsp;\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Reset</button> &nbsp;\r\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleClickOnBack}>Back</button>\r\n                            </form>     \r\n                        </div>             \r\n                        <div className=\"col-md-6 text-center\">\r\n                            <div class=\"col-md-4 py-1\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-body\">\r\n                                        \r\n                                    </div>\r\n                                </div>                        \r\n                            </div>    \r\n                        </div>  \r\n                    </div>   \r\n                </div>             \r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClickOnBack () {\r\n        this.props.history.push (\"/expenses\")\r\n    }\r\n}\r\n\r\nexport default ExpenseForm","\r\nimport React, { Component } from 'react'\r\n\r\n\r\nclass ExpenseList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleClickOfAddExpense = this.handleClickOfAddExpense.bind(this)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h4>Expenses</h4>\r\n                    <p className=\"text-left\">Expenses {\">\"} List</p>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputYear\">Year</label>\r\n                                <select id=\"inputYear\" className=\"form-control\" name=\"expenseYear\">\r\n                                    <option value=\"0\">Choose...</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                    <option value=\"2021\" defaultValue>2021</option>\r\n                                    <option value=\"2021\">2022</option>\r\n                                    <option value=\"2022\">2023</option>\r\n                                    <option value=\"2023\">2024</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputMonth\">Month</label>\r\n                                <select id=\"inputMonth\" className=\"form-control\" name=\"expenseMonth\">\r\n                                    <option value=\"0\" defaultValue>Choose...</option>\r\n                                    <option value=\"1\">January</option>\r\n                                    <option value=\"2\">February</option>\r\n                                    <option value=\"3\">March</option>\r\n                                    <option value=\"4\">April</option>\r\n                                    <option value=\"5\">May</option>\r\n                                    <option value=\"6\">June</option>\r\n                                    <option value=\"7\">July</option>\r\n                                    <option value=\"8\">August</option>\r\n                                    <option value=\"9\">September</option>\r\n                                    <option value=\"10\">October</option>\r\n                                    <option value=\"11\">November</option>\r\n                                    <option value=\"12\">December</option>\r\n                                </select>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-group col-md-1\">\r\n                                <label for=\"btnSubmit\">&nbsp;</label>\r\n                                <button type=\"button\" className=\"form-control btn btn-primary\">Submit</button> &nbsp;\r\n                            </div>\r\n                            <div className=\"form-group col-md-1\">\r\n                                <label for=\"btnReset\">&nbsp;</label>\r\n                                <button type=\"reset\" className=\"form-control btn btn-primary\">Reset</button> &nbsp;\r\n                            </div>\r\n                            <div className=\"form-group col-md-1 ml-auto \">\r\n                                <label for=\"btnAddExpense\">&nbsp;</label>\r\n                                <button type=\"button\" className=\"btn btn-primary text-nowrap\" onClick={this.handleClickOfAddExpense}>Add Expense</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <table className=\"table\">\r\n                        <thead className=\"table-primary\">\r\n                            <tr>\r\n                                <th scope=\"col\">Nick name</th>\r\n                                <th scope=\"col\">First Name</th>\r\n                                <th scope=\"col\">Last Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Mobile #</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>                                \r\n                                <td>Mark</td>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>Otto@gmail.com</td>\r\n                                <td>+91-44-12121123232</td>                                \r\n                            </tr>\r\n                            <tr>\r\n                                <td>Mark</td>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>Otto@gmail.com</td>\r\n                                <td>+91-44-12121123232</td>                              \r\n                            </tr>\r\n                            <tr>\r\n                                <td>Mark</td>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>Otto@gmail.com</td>\r\n                                <td>+91-44-12121123232</td>                              \r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClickOfAddExpense() {\r\n        this.props.history.push(\"/expenses/add\")\r\n    }\r\n\r\n}\r\n\r\nexport default ExpenseList","\r\nimport React, { Component } from 'react'\r\n\r\nclass EventForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClickOnBack = this.handleClickOnBack.bind(this)             \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h4>Events</h4>\r\n                    <p className=\"text-left\">Events {\">\"} Add</p>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 border-right border-primary\">\r\n                            <form>                        \r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label for=\"inputEventDate\">Date</label>\r\n                                        <input type=\"date\" id=\"inputEventDate\" name=\"eventDate\" className=\"form-control\" />                                \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label for=\"inputEventDesc\">Description</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"inputEventDesc\" placeholder=\"Description\" />\r\n                                    </div>                \r\n                                </div>                                            \r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button> &nbsp;\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Reset</button> &nbsp;\r\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleClickOnBack}>Back</button>\r\n                            </form>     \r\n                        </div>             \r\n                        <div className=\"col-md-6 text-center\">\r\n                            <div class=\"col-md-4 py-1\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-body\">\r\n                                        \r\n                                    </div>\r\n                                </div>                        \r\n                            </div>    \r\n                        </div>  \r\n                    </div>   \r\n                </div>             \r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClickOnBack () {\r\n        this.props.history.push (\"/events\")\r\n    }\r\n}\r\n\r\nexport default EventForm","\r\nimport React, { Component } from 'react'\r\n\r\n\r\nclass EventList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleClickOfAddEvent = this.handleClickOfAddEvent.bind(this)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h4>Events</h4>\r\n                    <p className=\"text-left\">Events {\">\"} List</p>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputYear\">Year</label>\r\n                                <select id=\"inputYear\" className=\"form-control\" name=\"expenseYear\">\r\n                                    <option value=\"0\">Choose...</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                    <option value=\"2021\" selected>2021</option>\r\n                                    <option value=\"2021\">2022</option>\r\n                                    <option value=\"2022\">2023</option>\r\n                                    <option value=\"2023\">2024</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputMonth\">Month</label>\r\n                                <select id=\"inputMonth\" className=\"form-control\" name=\"expenseMonth\">\r\n                                    <option value=\"0\" selected>Choose...</option>\r\n                                    <option value=\"1\">January</option>\r\n                                    <option value=\"2\">February</option>\r\n                                    <option value=\"3\">March</option>\r\n                                    <option value=\"4\">April</option>\r\n                                    <option value=\"5\">May</option>\r\n                                    <option value=\"6\">June</option>\r\n                                    <option value=\"7\">July</option>\r\n                                    <option value=\"8\">August</option>\r\n                                    <option value=\"9\">September</option>\r\n                                    <option value=\"10\">October</option>\r\n                                    <option value=\"11\">November</option>\r\n                                    <option value=\"12\">December</option>\r\n                                </select>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-group col-md-1\">\r\n                                <label for=\"btnSubmit\">&nbsp;</label>\r\n                                <button type=\"button\" className=\"form-control btn btn-primary\">Submit</button> &nbsp;\r\n                            </div>\r\n                            <div className=\"form-group col-md-1\">\r\n                                <label for=\"btnReset\">&nbsp;</label>\r\n                                <button type=\"reset\" className=\"form-control btn btn-primary\">Reset</button> &nbsp;\r\n                            </div>\r\n                            <div className=\"form-group col-md-1 ml-auto \">\r\n                                <label for=\"btnAddEvent\">&nbsp;</label>\r\n                                <button type=\"button\" className=\"btn btn-primary text-nowrap\" onClick={this.handleClickOfAddEvent}>Add Event</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <table className=\"table\">\r\n                        <thead className=\"table-primary\">\r\n                            <tr>\r\n                                <th scope=\"col\">Nick name</th>\r\n                                <th scope=\"col\">First Name</th>\r\n                                <th scope=\"col\">Last Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Mobile #</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>                                \r\n                                <td>Mark</td>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>Otto@gmail.com</td>\r\n                                <td>+91-44-12121123232</td>                                \r\n                            </tr>\r\n                            <tr>\r\n                                <td>Mark</td>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>Otto@gmail.com</td>\r\n                                <td>+91-44-12121123232</td>                              \r\n                            </tr>\r\n                            <tr>\r\n                                <td>Mark</td>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>Otto@gmail.com</td>\r\n                                <td>+91-44-12121123232</td>                              \r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClickOfAddEvent() {\r\n        this.props.history.push(\"/events/add\")\r\n    }\r\n\r\n}\r\n\r\nexport default EventList","\r\nimport React, { Component } from 'react'\r\n\r\nclass NoteForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClickOnBack = this.handleClickOnBack.bind(this)             \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h4>Events</h4>\r\n                    <p className=\"text-left\">Notes {\">\"} Add</p>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 border-right border-primary\">\r\n                            <form>                        \r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label for=\"inputNoteDate\">Date</label>\r\n                                        <input type=\"date\" id=\"inputNoteDate\" name=\"eventDate\" className=\"form-control\" />                                \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label for=\"inputNotes\">Notes</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"inputNotes\" placeholder=\"notesDetail\" />\r\n                                    </div>                \r\n                                </div>                                            \r\n\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button> &nbsp;\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Reset</button> &nbsp;\r\n                                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleClickOnBack}>Back</button>\r\n                            </form>     \r\n                        </div>             \r\n                        <div className=\"col-md-6 text-center\">\r\n                            <div class=\"col-md-4 py-1\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-body\">\r\n                                        \r\n                                    </div>\r\n                                </div>                        \r\n                            </div>    \r\n                        </div>  \r\n                    </div>   \r\n                </div>             \r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClickOnBack () {\r\n        this.props.history.push (\"/notes\")\r\n    }\r\n}\r\n\r\nexport default NoteForm","\r\nimport React, { Component } from 'react'\r\n\r\n\r\nclass NoteList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleClickOfAddNote = this.handleClickOfAddNote.bind(this)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h4>Notes</h4>\r\n                    <p className=\"text-left\">Notes {\">\"} List</p>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputYear\">Year</label>\r\n                                <select id=\"inputYear\" className=\"form-control\" name=\"expenseYear\">\r\n                                    <option value=\"0\">Choose...</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                    <option value=\"2021\" selected>2021</option>\r\n                                    <option value=\"2021\">2022</option>\r\n                                    <option value=\"2022\">2023</option>\r\n                                    <option value=\"2023\">2024</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputMonth\">Month</label>\r\n                                <select id=\"inputMonth\" className=\"form-control\" name=\"expenseMonth\">\r\n                                    <option value=\"0\" selected>Choose...</option>\r\n                                    <option value=\"1\">January</option>\r\n                                    <option value=\"2\">February</option>\r\n                                    <option value=\"3\">March</option>\r\n                                    <option value=\"4\">April</option>\r\n                                    <option value=\"5\">May</option>\r\n                                    <option value=\"6\">June</option>\r\n                                    <option value=\"7\">July</option>\r\n                                    <option value=\"8\">August</option>\r\n                                    <option value=\"9\">September</option>\r\n                                    <option value=\"10\">October</option>\r\n                                    <option value=\"11\">November</option>\r\n                                    <option value=\"12\">December</option>\r\n                                </select>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-group col-md-1\">\r\n                                <label for=\"btnSubmit\">&nbsp;</label>\r\n                                <button type=\"button\" className=\"form-control btn btn-primary\">Submit</button> &nbsp;\r\n                            </div>\r\n                            <div className=\"form-group col-md-1\">\r\n                                <label for=\"btnReset\">&nbsp;</label>\r\n                                <button type=\"reset\" className=\"form-control btn btn-primary\">Reset</button> &nbsp;\r\n                            </div>\r\n                            <div className=\"form-group col-md-1 ml-auto \">\r\n                                <label for=\"btnAddEvent\">&nbsp;</label>\r\n                                <button type=\"button\" className=\"btn btn-primary text-nowrap\" onClick={this.handleClickOfAddNote}>Add Note</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <table className=\"table\">\r\n                        <thead className=\"table-primary\">\r\n                            <tr>\r\n                                <th scope=\"col\">Nick name</th>\r\n                                <th scope=\"col\">First Name</th>\r\n                                <th scope=\"col\">Last Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Mobile #</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>                                \r\n                                <td>Mark</td>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>Otto@gmail.com</td>\r\n                                <td>+91-44-12121123232</td>                                \r\n                            </tr>\r\n                            <tr>\r\n                                <td>Mark</td>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>Otto@gmail.com</td>\r\n                                <td>+91-44-12121123232</td>                              \r\n                            </tr>\r\n                            <tr>\r\n                                <td>Mark</td>\r\n                                <td>Mark</td>\r\n                                <td>Otto</td>\r\n                                <td>Otto@gmail.com</td>\r\n                                <td>+91-44-12121123232</td>                              \r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClickOfAddNote() {\r\n        this.props.history.push(\"/notes/add\")\r\n    }\r\n\r\n}\r\n\r\nexport default NoteList","import React, {Component} from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport AuthService from '../services/AuthService'\r\n\r\n\r\nclass AuthenticatedRoute extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n    }\r\n\r\n    render () {\r\n        console.log ('isUserAuthenticated ::: ' + this.props.isAuthenticated)\r\n        if (this.props.isAuthenticated) {\r\n            return <Route {...this.props} />\r\n        } else {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute","/**\r\n * This is the app root component of this application\r\n * \r\n * \r\n * Developed by vini technology solutions\r\n */\r\nimport React, { Component } from 'react'\r\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport { UserContext } from '../contexts/UserContext.js'\r\n\r\nimport HeaderComponent from './header/HeaderComponent.jsx'\r\nimport LoginComponent from './login/LoginComponent.jsx'\r\nimport HomeComponent from './home/HomeComponent.jsx'\r\nimport ContactForm from './contact/ContactForm.jsx'\r\nimport ContactList from './contact/ContactList.jsx'\r\nimport ContactConfirm from './contact/ContactConfirm.jsx'\r\nimport ExpenseForm from './expense/ExpenseForm.jsx'\r\nimport ExpenseList from './expense/ExpenseList.jsx'\r\nimport EventForm from './event/EventForm.jsx'\r\nimport EventList from './event/EventList.jsx'\r\nimport NoteForm from './notes/NoteForm.jsx'\r\nimport NoteList from './notes/NoteList.jsx'\r\nimport AuthenticatedRoute from './AuthenticatedRoute.jsx'\r\n\r\n\r\nclass AppComponent extends Component {\r\n    constructor (props) {\r\n        console.log ('constructor...')\r\n        super (props)\r\n\r\n        this.state = {\r\n            isAuthenticated : this.isUserAuthenticated(),\r\n            loggedInUserId: this.getLoggedInUserId(),\r\n            loggedInUserName: this.getLoggedInUserName(), \r\n            roles: this.getLoggedInUserRoles()\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log ('App Component mounted...')\r\n        console.log ('loggedInUserName ' + this.state.loggedInUserName)\r\n        this.initialize ()\r\n    }\r\n\r\n    render () {\r\n        console.log ('render...')\r\n        return (\r\n            <UserContext.Provider value= {{isAuthenticated: this.state.isAuthenticated, loggedInUserId: this.state.loggedInUserId, loggedInUserName: this.state.loggedInUserName, roles: this.state.roles, registerLogin : this.registerLogin}}>\r\n                <div className=\"container-fluid\">\r\n                    \r\n                    <Router>\r\n                        <>\r\n                            <HeaderComponent />\r\n                            \r\n                            <Switch>\r\n                                <Route path=\"/\" exact component={LoginComponent}  />                    \r\n                                <Route path=\"/login\" component={LoginComponent} />                    \r\n                                <AuthenticatedRoute path=\"/home\" component={HomeComponent}  isAuthenticated={this.state.isAuthenticated}/>                    \r\n                                <AuthenticatedRoute path=\"/contacts\" exact component={ContactList} isAuthenticated={this.state.isAuthenticated}/>                        \r\n                                <AuthenticatedRoute path=\"/contacts/add\" component={ContactForm} isAuthenticated={this.state.isAuthenticated}/>     \r\n                                <AuthenticatedRoute path=\"/contacts/confirm\" component={ContactConfirm} isAuthenticated={this.state.isAuthenticated}/>                        \r\n                                <AuthenticatedRoute path=\"/expenses\" exact component={ExpenseList} isAuthenticated={this.state.isAuthenticated}/>                        \r\n                                <AuthenticatedRoute path=\"/expenses/add\" component={ExpenseForm} isAuthenticated={this.state.isAuthenticated}/>                            \r\n                                <AuthenticatedRoute path=\"/events\" exact component={EventList} isAuthenticated={this.state.isAuthenticated}/>                        \r\n                                <AuthenticatedRoute path=\"/events/add\" component={EventForm} isAuthenticated={this.state.isAuthenticated}/>    \r\n                                <AuthenticatedRoute path=\"/notes\" exact component={NoteList} isAuthenticated={this.state.isAuthenticated}/>                        \r\n                                <AuthenticatedRoute path=\"/notes/add\" component={NoteForm} isAuthenticated={this.state.isAuthenticated}/>                            \r\n                            </Switch>\r\n                        </>\r\n                    </Router>\r\n                </div>\r\n            </UserContext.Provider>\r\n        )\r\n    }\r\n\r\n    initialize = () => {\r\n        let isAuthenticated = sessionStorage.getItem ('isAuthenticated') \r\n        if (isAuthenticated) {\r\n            let user = JSON.parse (sessionStorage.getItem ('user'))\r\n            this.init (isAuthenticated, user)\r\n        } else {\r\n            this.initWithDefaultValue ()\r\n        }\r\n    }\r\n\r\n    isUserAuthenticated = () => {\r\n        let authHeader = sessionStorage.getItem ('authHeader')\r\n        console.log (authHeader)\r\n        if (authHeader) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n    registerLogin = (isAuthenticated, user) => {\r\n        console.log (' App registerLogin ' + isAuthenticated + ' : ' + user.userId)\r\n        this.init (isAuthenticated, user)\r\n    }\r\n\r\n    init = (isAuthenticated, user) => {\r\n        console.log (' init called....' + isAuthenticated + ':' + user)\r\n        this.setState ({\r\n            isAuthenticated : isAuthenticated,\r\n            loggedInUserId: user.userId,\r\n            loggedInUserName: user.userName, \r\n            roles: user.roleList\r\n        })\r\n    }\r\n\r\n    initWithDefaultValue = () => {\r\n        console.log (' initWithDefaultValuet called....')\r\n        this.setState ({\r\n            isAuthenticated : false,\r\n            loggedInUserId: '',\r\n            loggedInUserName: '', \r\n            roles: []\r\n        })\r\n    }\r\n\r\n    getLoggedInUserId = () => {\r\n        if (this.isUserAuthenticated()) {\r\n            let user = JSON.parse (sessionStorage.getItem ('user'))\r\n            return user.userId\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    getLoggedInUserName = () => {\r\n        if (this.isUserAuthenticated()) {\r\n            let user = JSON.parse (sessionStorage.getItem ('user'))\r\n            return user.userName;\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    getLoggedInUserRoles = () => {\r\n        if (this.isUserAuthenticated()) {\r\n            let user = JSON.parse (sessionStorage.getItem ('user'))\r\n            return user.roleList;\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppComponent","import './App.css'\r\nimport 'jquery/dist/jquery.js'\r\nimport 'popper.js'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\n\r\n\r\n\r\nimport AppComponent from './components/AppComponent.jsx'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}