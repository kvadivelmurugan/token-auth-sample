{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\k.vadivelmurugan\\\\basic-auth-sample\\\\basic-auth-react-app\\\\src\\\\components\\\\AppComponent.jsx\";\n\n/**\r\n * This is the app root component of this application\r\n * \r\n * \r\n * Developed by vini technology solutions\r\n */\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { UserContext } from '../contexts/UserContext.js';\nimport HeaderComponent from './header/HeaderComponent.jsx';\nimport LoginComponent from './login/LoginComponent.jsx';\nimport HomeComponent from './home/HomeComponent.jsx';\nimport ContactForm from './contact/ContactForm.jsx';\nimport ContactList from './contact/ContactList.jsx';\nimport ContactConfirm from './contact/ContactConfirm.jsx';\nimport ExpenseForm from './expense/ExpenseForm.jsx';\nimport ExpenseList from './expense/ExpenseList.jsx';\nimport EventForm from './event/EventForm.jsx';\nimport EventList from './event/EventList.jsx';\nimport NoteForm from './notes/NoteForm.jsx';\nimport NoteList from './notes/NoteList.jsx';\nimport AuthenticatedRoute from './AuthenticatedRoute.jsx';\n\nclass AppComponent extends Component {\n  constructor(props) {\n    console.log('constructor...');\n    super(props);\n\n    this.initialize = () => {\n      let isAuthenticated = sessionStorage.getItem('isAuthenticated');\n\n      if (isAuthenticated) {\n        let user = JSON.parse(sessionStorage.getItem('user'));\n        this.init(isAuthenticated, user);\n      } else {\n        this.initWithDefaultValue();\n      }\n    };\n\n    this.isUserAuthenticated = () => {\n      let authHeader = sessionStorage.getItem('authHeader');\n      console.log(authHeader);\n\n      if (authHeader) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.registerLogin = (isAuthenticated, user) => {\n      console.log(' App registerLogin ' + isAuthenticated + ' : ' + user.userId);\n      this.init(isAuthenticated, user);\n    };\n\n    this.init = (isAuthenticated, user) => {\n      console.log(' init called....' + isAuthenticated + ':' + user);\n      this.setState({\n        isAuthenticated: isAuthenticated,\n        loggedInUserId: user.userId,\n        loggedInUserName: user.userName,\n        roles: user.roleList\n      });\n    };\n\n    this.initWithDefaultValue = () => {\n      console.log(' initWithDefaultValuet called....');\n      this.setState({\n        isAuthenticated: false,\n        loggedInUserId: '',\n        loggedInUserName: '',\n        roles: []\n      });\n    };\n\n    this.getLoggedInUserId = () => {\n      if (this.isUserAuthenticated()) {\n        let user = JSON.parse(sessionStorage.getItem('user'));\n        return user.userId;\n      } else {\n        return '';\n      }\n    };\n\n    this.getLoggedInUserName = () => {\n      if (this.isUserAuthenticated()) {\n        let user = JSON.parse(sessionStorage.getItem('user'));\n        return user.userName;\n      } else {\n        return '';\n      }\n    };\n\n    this.getLoggedInUserRoles = () => {\n      if (this.isUserAuthenticated()) {\n        let user = JSON.parse(sessionStorage.getItem('user'));\n        return user.roleList;\n      } else {\n        return [];\n      }\n    };\n\n    this.state = {\n      isAuthenticated: this.isUserAuthenticated(),\n      loggedInUserId: this.getLoggedInUserId(),\n      loggedInUserName: this.getLoggedInUserName(),\n      roles: this.getLoggedInUserRoles()\n    };\n  }\n\n  componentDidMount() {\n    console.log('App Component mounted...');\n    console.log('loggedInUserName ' + this.state.loggedInUserName);\n    this.initialize();\n  }\n\n  render() {\n    console.log('render...');\n    return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        isAuthenticated: this.state.isAuthenticated,\n        loggedInUserId: this.state.loggedInUserId,\n        loggedInUserName: this.state.loggedInUserName,\n        roles: this.state.roles,\n        registerLogin: this.registerLogin\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                exact: true,\n                component: LoginComponent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/login\",\n                component: LoginComponent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n                path: \"/home\",\n                component: HomeComponent,\n                isAuthenticated: this.state.isAuthenticated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n                path: \"/contacts\",\n                exact: true,\n                component: ContactList,\n                isAuthenticated: this.state.isAuthenticated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n                path: \"/contacts/add\",\n                component: ContactForm,\n                isAuthenticated: this.state.isAuthenticated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n                path: \"/contacts/confirm\",\n                component: ContactConfirm,\n                isAuthenticated: this.state.isAuthenticated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n                path: \"/expenses\",\n                exact: true,\n                component: ExpenseList,\n                isAuthenticated: this.state.isAuthenticated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n                path: \"/expenses/add\",\n                component: ExpenseForm,\n                isAuthenticated: this.state.isAuthenticated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n                path: \"/events\",\n                exact: true,\n                component: EventList,\n                isAuthenticated: this.state.isAuthenticated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n                path: \"/events/add\",\n                component: EventForm,\n                isAuthenticated: this.state.isAuthenticated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n                path: \"/notes\",\n                exact: true,\n                component: NoteList,\n                isAuthenticated: this.state.isAuthenticated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n                path: \"/notes/add\",\n                component: NoteForm,\n                isAuthenticated: this.state.isAuthenticated\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AppComponent;","map":{"version":3,"sources":["E:/k.vadivelmurugan/basic-auth-sample/basic-auth-react-app/src/components/AppComponent.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","UserContext","HeaderComponent","LoginComponent","HomeComponent","ContactForm","ContactList","ContactConfirm","ExpenseForm","ExpenseList","EventForm","EventList","NoteForm","NoteList","AuthenticatedRoute","AppComponent","constructor","props","console","log","initialize","isAuthenticated","sessionStorage","getItem","user","JSON","parse","init","initWithDefaultValue","isUserAuthenticated","authHeader","registerLogin","userId","setState","loggedInUserId","loggedInUserName","userName","roles","roleList","getLoggedInUserId","getLoggedInUserName","getLoggedInUserRoles","state","componentDidMount","render"],"mappings":"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","sourcesContent":["/**\r\n * This is the app root component of this application\r\n * \r\n * \r\n * Developed by vini technology solutions\r\n */\r\nimport React, { Component } from 'react'\r\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport { UserContext } from '../contexts/UserContext.js'\r\n\r\nimport HeaderComponent from './header/HeaderComponent.jsx'\r\nimport LoginComponent from './login/LoginComponent.jsx'\r\nimport HomeComponent from './home/HomeComponent.jsx'\r\nimport ContactForm from './contact/ContactForm.jsx'\r\nimport ContactList from './contact/ContactList.jsx'\r\nimport ContactConfirm from './contact/ContactConfirm.jsx'\r\nimport ExpenseForm from './expense/ExpenseForm.jsx'\r\nimport ExpenseList from './expense/ExpenseList.jsx'\r\nimport EventForm from './event/EventForm.jsx'\r\nimport EventList from './event/EventList.jsx'\r\nimport NoteForm from './notes/NoteForm.jsx'\r\nimport NoteList from './notes/NoteList.jsx'\r\nimport AuthenticatedRoute from './AuthenticatedRoute.jsx'\r\n\r\n\r\nclass AppComponent extends Component {\r\n    constructor (props) {\r\n        console.log ('constructor...')\r\n        super (props)\r\n\r\n        this.state = {\r\n            isAuthenticated : this.isUserAuthenticated(),\r\n            loggedInUserId: this.getLoggedInUserId(),\r\n            loggedInUserName: this.getLoggedInUserName(), \r\n            roles: this.getLoggedInUserRoles()\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log ('App Component mounted...')\r\n        console.log ('loggedInUserName ' + this.state.loggedInUserName)\r\n        this.initialize ()\r\n    }\r\n\r\n    render () {\r\n        console.log ('render...')\r\n        return (\r\n            <UserContext.Provider value= {{isAuthenticated: this.state.isAuthenticated, loggedInUserId: this.state.loggedInUserId, loggedInUserName: this.state.loggedInUserName, roles: this.state.roles, registerLogin : this.registerLogin}}>\r\n                <div className=\"container-fluid\">\r\n                    \r\n                    <Router>\r\n                        <>\r\n                            <HeaderComponent />\r\n                            \r\n                            <Switch>\r\n                                <Route path=\"/\" exact component={LoginComponent}  />                    \r\n                                <Route path=\"/login\" component={LoginComponent} />                    \r\n                                <AuthenticatedRoute path=\"/home\" component={HomeComponent}  isAuthenticated={this.state.isAuthenticated}/>                    \r\n                                <AuthenticatedRoute path=\"/contacts\" exact component={ContactList} isAuthenticated={this.state.isAuthenticated}/>                        \r\n                                <AuthenticatedRoute path=\"/contacts/add\" component={ContactForm} isAuthenticated={this.state.isAuthenticated}/>     \r\n                                <AuthenticatedRoute path=\"/contacts/confirm\" component={ContactConfirm} isAuthenticated={this.state.isAuthenticated}/>                        \r\n                                <AuthenticatedRoute path=\"/expenses\" exact component={ExpenseList} isAuthenticated={this.state.isAuthenticated}/>                        \r\n                                <AuthenticatedRoute path=\"/expenses/add\" component={ExpenseForm} isAuthenticated={this.state.isAuthenticated}/>                            \r\n                                <AuthenticatedRoute path=\"/events\" exact component={EventList} isAuthenticated={this.state.isAuthenticated}/>                        \r\n                                <AuthenticatedRoute path=\"/events/add\" component={EventForm} isAuthenticated={this.state.isAuthenticated}/>    \r\n                                <AuthenticatedRoute path=\"/notes\" exact component={NoteList} isAuthenticated={this.state.isAuthenticated}/>                        \r\n                                <AuthenticatedRoute path=\"/notes/add\" component={NoteForm} isAuthenticated={this.state.isAuthenticated}/>                            \r\n                            </Switch>\r\n                        </>\r\n                    </Router>\r\n                </div>\r\n            </UserContext.Provider>\r\n        )\r\n    }\r\n\r\n    initialize = () => {\r\n        let isAuthenticated = sessionStorage.getItem ('isAuthenticated') \r\n        if (isAuthenticated) {\r\n            let user = JSON.parse (sessionStorage.getItem ('user'))\r\n            this.init (isAuthenticated, user)\r\n        } else {\r\n            this.initWithDefaultValue ()\r\n        }\r\n    }\r\n\r\n    isUserAuthenticated = () => {\r\n        let authHeader = sessionStorage.getItem ('authHeader')\r\n        console.log (authHeader)\r\n        if (authHeader) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n    registerLogin = (isAuthenticated, user) => {\r\n        console.log (' App registerLogin ' + isAuthenticated + ' : ' + user.userId)\r\n        this.init (isAuthenticated, user)\r\n    }\r\n\r\n    init = (isAuthenticated, user) => {\r\n        console.log (' init called....' + isAuthenticated + ':' + user)\r\n        this.setState ({\r\n            isAuthenticated : isAuthenticated,\r\n            loggedInUserId: user.userId,\r\n            loggedInUserName: user.userName, \r\n            roles: user.roleList\r\n        })\r\n    }\r\n\r\n    initWithDefaultValue = () => {\r\n        console.log (' initWithDefaultValuet called....')\r\n        this.setState ({\r\n            isAuthenticated : false,\r\n            loggedInUserId: '',\r\n            loggedInUserName: '', \r\n            roles: []\r\n        })\r\n    }\r\n\r\n    getLoggedInUserId = () => {\r\n        if (this.isUserAuthenticated()) {\r\n            let user = JSON.parse (sessionStorage.getItem ('user'))\r\n            return user.userId\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    getLoggedInUserName = () => {\r\n        if (this.isUserAuthenticated()) {\r\n            let user = JSON.parse (sessionStorage.getItem ('user'))\r\n            return user.userName;\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    getLoggedInUserRoles = () => {\r\n        if (this.isUserAuthenticated()) {\r\n            let user = JSON.parse (sessionStorage.getItem ('user'))\r\n            return user.roleList;\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppComponent"]},"metadata":{},"sourceType":"module"}