{"ast":null,"code":"import _classCallCheck from\"E:/k.vadivelmurugan/basic-auth-sample/basic-auth-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"E:/k.vadivelmurugan/basic-auth-sample/basic-auth-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from\"axios\";import api from\"./_api.js\";import RoleModel from'./../models/RoleModel';var AuthService=/*#__PURE__*/function(){function AuthService(){_classCallCheck(this,AuthService);}_createClass(AuthService,[{key:\"doBasicAuth\",value:function doBasicAuth(userName,password){console.log(userName+\" \"+password);var authHeader=this.getAuthHeader(userName,password);return api.post('auth/basic?userName='+userName,{},{headers:{authorization:authHeader//'Access-Control-Allow-Origin': 'http://localhost:3000',\n//'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n}});}},{key:\"getRoles\",value:function getRoles(userName){return api.get(\"roles/\".concat(userName));}},{key:\"registerLogin\",value:function registerLogin(userName,password,userId,roleName){console.log('registerLogin called...');sessionStorage.setItem('userName',userName);sessionStorage.setItem('userId',userId);var authHeader=this.getAuthHeader(userName,password);sessionStorage.setItem('authHeader',authHeader);//this.setupAxiosInterceptorForRequest (authHeader)\n}},{key:\"registerLogin\",value:function registerLogin(flag,user){console.log('registerLogin called...');sessionStorage.setItem('userName',user.userName);sessionStorage.setItem('userId',user.userId);var authHeader=this.getAuthHeader(user.userName,user.password);sessionStorage.setItem('authHeader',authHeader);//this.setupAxiosInterceptorForRequest (authHeader)\nsessionStorage.setItem('isAuthenticated',flag);sessionStorage.setItem('user',JSON.stringify(user));}},{key:\"setupAxiosInterceptorForRequest\",value:function setupAxiosInterceptorForRequest(authHeader){var _this=this;console.log('interceptors called');axios.interceptors.request.use(function(config){if(_this.isUserAuthenticated()){config.headers['authorization']=authHeader;}return config;});}},{key:\"UnregisterLogin\",value:function UnregisterLogin(userName){sessionStorage.removeItem('userName');sessionStorage.removeItem('userId');sessionStorage.removeItem('authHeader');sessionStorage.removeItem('user');sessionStorage.removeItem('isAuthenticated');}},{key:\"getLoggedInUserName\",value:function getLoggedInUserName(){return sessionStorage.getItem('userName');}},{key:\"getLoggedInUserRoleName\",value:function getLoggedInUserRoleName(){return sessionStorage.getItem('roleName');}},{key:\"getLoggedInUserId\",value:function getLoggedInUserId(){return sessionStorage.getItem('userId');}},{key:\"getAuthHeader\",value:function getAuthHeader(userName,password){return'Basic '+window.btoa(userName+\":\"+password);}},{key:\"isUserAuthenticated\",value:function isUserAuthenticated(){var userName=sessionStorage.getItem('authHeader');console.log(userName);if(userName){return true;}return false;}}]);return AuthService;}();export default new AuthService();","map":{"version":3,"sources":["E:/k.vadivelmurugan/basic-auth-sample/basic-auth-react-app/src/services/AuthService.js"],"names":["axios","api","RoleModel","AuthService","userName","password","console","log","authHeader","getAuthHeader","post","headers","authorization","get","userId","roleName","sessionStorage","setItem","flag","user","JSON","stringify","interceptors","request","use","config","isUserAuthenticated","removeItem","getItem","window","btoa"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\n\r\nimport api from \"./_api.js\"\r\nimport RoleModel from './../models/RoleModel'\r\nclass AuthService {\r\n\r\n    doBasicAuth (userName, password) {\r\n        console.log (userName + \" \" + password)\r\n\r\n        let authHeader = this.getAuthHeader (userName, password)\r\n\r\n        return api.post ('auth/basic?userName='+userName, \r\n            { }, \r\n            {\r\n                headers: {\r\n                    authorization: authHeader\r\n                    //'Access-Control-Allow-Origin': 'http://localhost:3000',\r\n                    //'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\r\n                }\r\n            })\r\n    }\r\n\r\n    getRoles (userName) {\r\n        return api.get (`roles/${userName}`)\r\n    }\r\n\r\n    registerLogin (userName, password, userId, roleName) {\r\n        console.log ('registerLogin called...')\r\n        sessionStorage.setItem('userName', userName)\r\n        sessionStorage.setItem('userId', userId)\r\n\r\n        let authHeader = this.getAuthHeader(userName, password)\r\n        sessionStorage.setItem('authHeader', authHeader)\r\n        //this.setupAxiosInterceptorForRequest (authHeader)\r\n    }\r\n\r\n    registerLogin (flag, user) {\r\n        console.log ('registerLogin called...')\r\n        sessionStorage.setItem('userName', user.userName)\r\n        sessionStorage.setItem('userId', user.userId)\r\n\r\n        let authHeader = this.getAuthHeader(user.userName, user.password)\r\n        sessionStorage.setItem('authHeader', authHeader)\r\n        //this.setupAxiosInterceptorForRequest (authHeader)\r\n        sessionStorage.setItem ('isAuthenticated', flag)\r\n        sessionStorage.setItem ('user', JSON.stringify(user))\r\n    }\r\n\r\n    setupAxiosInterceptorForRequest (authHeader) {\r\n        console.log ('interceptors called') \r\n        axios.interceptors.request.use (\r\n            (config) => {\r\n                if (this.isUserAuthenticated ()) {                                       \r\n                    config.headers['authorization'] = authHeader                  \r\n                }\r\n                return config\r\n            }\r\n        )\r\n    }\r\n\r\n    UnregisterLogin (userName) {\r\n        sessionStorage.removeItem('userName')\r\n        sessionStorage.removeItem('userId')\r\n        sessionStorage.removeItem('authHeader')\r\n        sessionStorage.removeItem('user')\r\n        sessionStorage.removeItem ('isAuthenticated')\r\n    } \r\n\r\n    getLoggedInUserName() {\r\n        return sessionStorage.getItem ('userName');\r\n    }\r\n\r\n    getLoggedInUserRoleName() {\r\n        return sessionStorage.getItem ('roleName');\r\n    }\r\n\r\n    getLoggedInUserId() {\r\n        return sessionStorage.getItem ('userId');\r\n    }\r\n\r\n    getAuthHeader (userName, password) {\r\n        return 'Basic ' + window.btoa(userName + \":\" + password)\r\n    }\r\n\r\n    isUserAuthenticated () {\r\n        let userName = sessionStorage.getItem ('authHeader')\r\n        console.log (userName)\r\n        if (userName) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n}\r\n\r\nexport default new AuthService()"]},"metadata":{},"sourceType":"module"}