{"ast":null,"code":"class ErrorHandlerService {\n  handleError(error) {\n    if (error.response && error.response.status === 401) {\n      return \"Invalid username or password\";\n    }\n\n    if (error.response && error.response.status === 403) {\n      return \"You are not authorized to access this resource, please raise a ticket to get the access\";\n    }\n\n    if (error.response && error.response.status === 500) {\n      return \"Unknown error, please contact support\";\n    }\n\n    if (error.message && error.message === \"Network Error\") {\n      return \"Unable to connect the service, please contact support\";\n    }\n\n    return error.message;\n  }\n\n}\n\nexport default new ErrorHandlerService();","map":{"version":3,"sources":["E:/k.vadivelmurugan/token-auth-sample/jwt-auth-react-app/src/services/ErrorHandlerService.js"],"names":["ErrorHandlerService","handleError","error","response","status","message"],"mappings":"AAAA,MAAMA,mBAAN,CAA0B;AACtBC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,QAAIA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,MAAf,KAA0B,GAAhD,EAAqD;AACjD,aAAO,8BAAP;AACH;;AAED,QAAIF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,MAAf,KAA0B,GAAhD,EAAqD;AACjD,aAAO,yFAAP;AACH;;AAED,QAAIF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,MAAf,KAA0B,GAAhD,EAAqD;AACjD,aAAO,uCAAP;AACH;;AAED,QAAIF,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACG,OAAN,KAAkB,eAAvC,EAAwD;AACpD,aAAO,uDAAP;AACH;;AACD,WAAOH,KAAK,CAACG,OAAb;AACH;;AAlBqB;;AAoB1B,eAAe,IAAIL,mBAAJ,EAAf","sourcesContent":["class ErrorHandlerService {\r\n    handleError (error) {\r\n        if (error.response && error.response.status === 401) {\r\n            return \"Invalid username or password\"\r\n        }\r\n\r\n        if (error.response && error.response.status === 403) {\r\n            return \"You are not authorized to access this resource, please raise a ticket to get the access\"\r\n        }\r\n\r\n        if (error.response && error.response.status === 500) {\r\n            return \"Unknown error, please contact support\"\r\n        }\r\n\r\n        if (error.message && error.message === \"Network Error\") {\r\n            return \"Unable to connect the service, please contact support\"\r\n        }\r\n        return error.message\r\n    }\r\n}\r\nexport default new ErrorHandlerService()"]},"metadata":{},"sourceType":"module"}