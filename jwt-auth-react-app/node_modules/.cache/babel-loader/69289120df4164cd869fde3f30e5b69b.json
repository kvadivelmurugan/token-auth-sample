{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\k.vadivelmurugan\\\\basic-auth-sample\\\\basic-auth-react-app\\\\src\\\\components\\\\contact\\\\ContactForm.jsx\";\nimport React, { Component } from 'react';\nimport CountryComponent from '../country/CountryComponent.jsx';\nimport StateComponent from '../state/StateComponent.jsx';\nimport RelationshipComponent from '../relationship/RelationshipComponent.jsx';\nimport GroupComponent from '../group/GroupComponent.jsx';\nimport ConfirmModalComponent from '../modal/ConfirmModalComponent.jsx';\nimport ContactModel from '../../models/ContactModel';\nimport AuthService from '../../services/AuthService';\nimport ContactService from './ContactService';\n\nclass ContactForm extends Component {\n  constructor(props) {\n    console.log('getLoggedInUserId ' + AuthService.getLoggedInUserId());\n    super(props);\n\n    this.handleClickOnBack = () => {\n      this.props.history.push(\"/contacts\");\n      console.log(this.state.contact);\n    };\n\n    this.handleOnChange = event => {\n      console.log('object ' + event.target.name);\n      console.log('value ' + event.target.value);\n      this.setState({\n        contact: { ...this.state.contact,\n          [event.target.name]: event.target.value\n        }\n      });\n      console.log('country ' + this.state.contact.countryId);\n    };\n\n    this.handleCountryOnChange = event => {\n      console.log('object ' + event.target.name);\n      console.log('value ' + event.target.value);\n      let country = this.state.contact.country;\n      country.countryId = event.target.value;\n      this.setState({\n        contact: { ...this.state.contact,\n          country: country\n        }\n      });\n      console.log('country ' + this.state.contact.country.countryId);\n    };\n\n    this.handleStateOnChange = event => {\n      console.log('object ' + event.target.name);\n      console.log('value ' + event.target.value);\n      let state = this.state.contact.state;\n      state.stateId = event.target.value;\n      this.setState({\n        contact: { ...this.state.contact,\n          state: state\n        }\n      });\n      console.log('state ' + this.state.contact.state.stateId);\n    };\n\n    this.handleRelationshipOnChange = event => {\n      console.log('object ' + event.target.name);\n      console.log('value ' + event.target.value);\n      let relationship = this.state.contact.relationship;\n      relationship.relationshipId = event.target.value;\n      this.setState({\n        contact: { ...this.state.contact,\n          relationship: relationship\n        }\n      });\n      console.log('relationship ' + this.state.contact.relationship.relationshipId);\n    };\n\n    this.handleGroupOnChange = event => {\n      console.log('object ' + event.target.name);\n      console.log('value ' + event.target.value);\n      let group = this.state.contact.group;\n      group.groupId = event.target.value;\n      this.setState({\n        contact: { ...this.state.contact,\n          group: group\n        }\n      });\n      console.log('group ' + this.state.contact.group.groupId);\n    };\n\n    this.showConfirmDialog = event => {\n      console.log('showConfirm');\n      event.preventDefault();\n\n      if (this.isValidForm()) {\n        this.setState({\n          showConfirmModal: !this.state.showConfirmModal\n        });\n      }\n    };\n\n    this.isValidForm = () => {\n      let isValid = true;\n      let errors = {\n        nickName: '',\n        personalEmail: '',\n        primaryAddress: '',\n        relationship: '',\n        group: ''\n      };\n      let contact = this.state.contact;\n      console.log('this.state.contact.nickName ' + this.state.contact.nickName);\n\n      if (!contact.nickName) {\n        isValid = false;\n        errors.nickName = 'Please enter Nick Name';\n      }\n\n      if (!this.state.contact.personalEmail) {\n        isValid = false;\n        errors.personalEmail = 'Please enter Personal Email';\n      }\n\n      if (!this.state.contact.primaryAddress) {\n        isValid = false;\n        errors.primaryAddress = 'Please enter Primary Address';\n      }\n\n      if (!this.state.contact.relationship.relationshipId) {\n        isValid = false;\n        errors.relationship = 'Please choose the Relationship';\n      }\n\n      console.log('this.state.contact.group.groupId  ' + this.state.contact.group.groupId);\n\n      if (!this.state.contact.group.groupId) {\n        isValid = false;\n        errors.group = 'Please choose the Group';\n      }\n\n      console.log('isValid ' + isValid);\n      this.setState({\n        isValid: isValid,\n        errors: errors\n      });\n      return isValid;\n    };\n\n    this.handleClickOnYes = () => {\n      console.log('Yes');\n      ContactService.saveContact(this.state.contact).then(response => {\n        console.log('contact saved...');\n        this.props.history.push('/contacts/confirm');\n      }).catch(response => {\n        console.log('contact save failed...');\n      });\n    };\n\n    this.handleClickOnNo = () => {\n      console.log('No');\n    };\n\n    this.handleClickOnYes = () => {\n      console.log('Yes');\n      ContactService.saveContact(this.state.contact).then(response => {\n        console.log('contact saved...');\n        this.props.history.push(\"/contacts/confirm\");\n      }).catch(response => {\n        console.log('contact save failed...');\n      });\n    };\n\n    this.handleOnClickClose = () => {\n      console.log('No');\n    };\n\n    this.initialize = () => {\n      console.log('pre-initialize ' + this.state.contact);\n      let user = this.state.contact.user;\n      user.userId = AuthService.getLoggedInUserId();\n      let status = this.state.contact.status;\n      status.statusId = 100;\n      this.setState({\n        contact: { ...this.state.contact,\n          user: user\n        },\n        contact: { ...this.state.contact,\n          status: status\n        }\n      });\n    };\n\n    this.state = {\n      contact: ContactModel,\n      showConfirmModal: false,\n      isValid: false,\n      errors: {\n        nickName: '',\n        personalEmail: '',\n        primaryAddress: '',\n        relationship: '',\n        group: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header bg-transparent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-left\",\n          children: [\"Contacts \", \">\", \" Add\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputNickName4\",\n                children: \"Nick name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"text-danger font-weight-bold required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 78\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                className: \"form-control\",\n                id: \"inputUserId\",\n                placeholder: \"userId\",\n                name: \"userId\",\n                value: this.state.contact.nickName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                autoComplete: \"off\",\n                className: \"form-control\",\n                id: \"inputNickName4\",\n                placeholder: \"Nick name\",\n                name: \"nickName\",\n                value: this.state.contact.nickName,\n                onChange: this.handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"text-danger\",\n                children: this.state.errors.nickName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputFirstname4\",\n                children: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                autoComplete: \"off\",\n                className: \"form-control\",\n                id: \"inputFirstname4\",\n                placeholder: \"First name\",\n                name: \"firstName\",\n                value: this.state.contact.firstName,\n                onChange: this.handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputLastname4\",\n                children: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                autoComplete: \"off\",\n                className: \"form-control\",\n                id: \"inputLastname4\",\n                placeholder: \"Last name\",\n                name: \"lastName\",\n                value: this.state.contact.lastName,\n                onChange: this.handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputPersonalEmail4\",\n                children: \"Personal Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"text-danger font-weight-bold required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 88\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                autoComplete: \"off\",\n                className: \"form-control\",\n                id: \"inputPersonalEmail4\",\n                placeholder: \"Primary Email\",\n                name: \"personalEmail\",\n                value: this.state.contact.personalEmail,\n                onChange: this.handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"text-danger\",\n                children: this.state.errors.personalEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputWorkEmail4\",\n                children: \"Office Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                autoComplete: \"off\",\n                className: \"form-control\",\n                id: \"inputWorkEmail4\",\n                placeholder: \"Secondary Email\",\n                name: \"workEmail\",\n                value: this.state.contact.workEmail,\n                onChange: this.handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputAddress\",\n              children: \"Door# / Block# / Apartment Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"text-danger font-weight-bold required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 94\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              autoComplete: \"off\",\n              className: \"form-control\",\n              id: \"inputAddress\",\n              placeholder: \"Door# / Block# / Apartment Name\",\n              name: \"primaryAddress\",\n              value: this.state.contact.primaryAddress,\n              onChange: this.handleOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"text-danger\",\n              children: this.state.errors.primaryAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputAddress2\",\n              children: \"Street Name / Area Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"text-danger font-weight-bold required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 87\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              autoComplete: \"off\",\n              className: \"form-control\",\n              id: \"inputAddress2\",\n              placeholder: \"Street Name / Area Name\",\n              name: \"secondaryAddress\",\n              value: this.state.contact.secondaryAddress,\n              onChange: this.handleOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"text-danger\",\n              children: this.state.errors.secondaryAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(CountryComponent, {\n                componentName: \"country\",\n                selectedCountry: this.state.contact.country,\n                onChangeMethod: this.handleCountryOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(StateComponent, {\n                componentName: \"state\",\n                selectedCountry: this.state.contact.country.countryId,\n                selectedState: this.state.contact.state,\n                onChangeMethod: this.handleStateOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputCity\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                autoComplete: \"off\",\n                className: \"form-control\",\n                id: \"inputCity\",\n                placeholder: \"City Name\",\n                name: \"city\",\n                value: this.state.contact.city,\n                onChange: this.handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputZip\",\n                children: \"Zip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                autoComplete: \"off\",\n                className: \"form-control\",\n                id: \"inputZip\",\n                name: \"zip\",\n                value: this.state.contact.zip,\n                onChange: this.handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputMobile\",\n                children: \"Mobile #\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                autoComplete: \"off\",\n                className: \"form-control\",\n                id: \"inputMobile\",\n                name: \"mobile\",\n                value: this.state.contact.mobile,\n                onChange: this.handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputHome\",\n                children: \"Home #\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                autoComplete: \"off\",\n                className: \"form-control\",\n                id: \"inputHome\",\n                name: \"homePhone\",\n                value: this.state.contact.homePhone,\n                onChange: this.handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputWork\",\n                children: \"Work #\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                autoComplete: \"off\",\n                className: \"form-control\",\n                id: \"inputWork\",\n                name: \"workPhone\",\n                value: this.state.contact.workPhone,\n                onChange: this.handleOnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(RelationshipComponent, {\n                autoComplete: \"off\",\n                componentName: \"relationship\",\n                selectedRelationship: this.state.contact.relationship,\n                onChangeMethod: this.handleRelationshipOnChange,\n                isError: this.state.errors.relationship\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(GroupComponent, {\n                autoComplete: \"off\",\n                componentName: \"group\",\n                selectedGroup: this.state.contact.group,\n                onChangeMethod: this.handleGroupOnChange,\n                isError: this.state.errors.group\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.showConfirmDialog,\n            \"data-target\": this.state.isValid ? \"#confirmModal\" : undefined,\n            \"data-toggle\": \"modal\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: this.handleClickOnBack,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmModalComponent, {\n          handleOnClickYes: this.handleClickOnYes,\n          handleOnClickNo: this.handleClickOnNo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["E:/k.vadivelmurugan/basic-auth-sample/basic-auth-react-app/src/components/contact/ContactForm.jsx"],"names":["React","Component","CountryComponent","StateComponent","RelationshipComponent","GroupComponent","ConfirmModalComponent","ContactModel","AuthService","ContactService","ContactForm","constructor","props","console","log","getLoggedInUserId","handleClickOnBack","history","push","state","contact","handleOnChange","event","target","name","value","setState","countryId","handleCountryOnChange","country","handleStateOnChange","stateId","handleRelationshipOnChange","relationship","relationshipId","handleGroupOnChange","group","groupId","showConfirmDialog","preventDefault","isValidForm","showConfirmModal","isValid","errors","nickName","personalEmail","primaryAddress","handleClickOnYes","saveContact","then","response","catch","handleClickOnNo","handleOnClickClose","initialize","user","userId","status","statusId","componentDidMount","render","firstName","lastName","workEmail","secondaryAddress","city","zip","mobile","homePhone","workPhone","undefined"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react'\r\n\r\nimport CountryComponent from '../country/CountryComponent.jsx'\r\nimport StateComponent from '../state/StateComponent.jsx'\r\nimport RelationshipComponent from '../relationship/RelationshipComponent.jsx'\r\nimport GroupComponent from '../group/GroupComponent.jsx'\r\n\r\nimport ConfirmModalComponent from '../modal/ConfirmModalComponent.jsx'\r\nimport ContactModel from '../../models/ContactModel'\r\n\r\nimport AuthService from '../../services/AuthService'\r\nimport ContactService from './ContactService'\r\n\r\nclass ContactForm extends Component {\r\n    constructor(props) {\r\n        console.log ('getLoggedInUserId ' + AuthService.getLoggedInUserId())\r\n        super(props)\r\n\r\n        this.state = {\r\n            contact : ContactModel,\r\n            showConfirmModal : false,\r\n            isValid : false,\r\n            errors : {\r\n                nickName : '',\r\n                personalEmail : '',\r\n                primaryAddress : '',\r\n                relationship : '',\r\n                group : ''\r\n            }        \r\n        }              \r\n    }\r\n\r\n    componentDidMount () {\r\n        this.initialize () \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card text-left\">\r\n                <div className=\"card-header bg-transparent\">\r\n                    <h4>Contacts</h4>\r\n                    <p className=\"text-left\">Contacts {\">\"} Add</p>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form autoComplete=\"off\">\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label for=\"inputNickName4\">Nick name</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                                <input type=\"hidden\" className=\"form-control\" id=\"inputUserId\" placeholder=\"userId\" name=\"userId\" value={this.state.contact.nickName}/>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputNickName4\" placeholder=\"Nick name\" name=\"nickName\" value={this.state.contact.nickName} onChange={this.handleOnChange}/>\r\n                                <p class=\"text-danger\">{this.state.errors.nickName}</p>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label for=\"inputFirstname4\">First name</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputFirstname4\" placeholder=\"First name\" name=\"firstName\" value={this.state.contact.firstName} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label for=\"inputLastname4\">Last name</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputLastname4\" placeholder=\"Last name\" name=\"lastName\" value={this.state.contact.lastName} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label for=\"inputPersonalEmail4\">Personal Email</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                                <input type=\"email\" autoComplete=\"off\" className=\"form-control\" id=\"inputPersonalEmail4\" placeholder=\"Primary Email\" name=\"personalEmail\" value={this.state.contact.personalEmail} onChange={this.handleOnChange}/>\r\n                                <p class=\"text-danger\">{this.state.errors.personalEmail}</p>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label for=\"inputWorkEmail4\">Office Email</label>\r\n                                <input type=\"email\" autoComplete=\"off\" className=\"form-control\" id=\"inputWorkEmail4\" placeholder=\"Secondary Email\" name=\"workEmail\" value={this.state.contact.workEmail} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"inputAddress\">Door# / Block# / Apartment Name</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                            <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputAddress\" placeholder=\"Door# / Block# / Apartment Name\" name=\"primaryAddress\" value={this.state.contact.primaryAddress} onChange={this.handleOnChange}/>\r\n                            <p class=\"text-danger\">{this.state.errors.primaryAddress}</p>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"inputAddress2\">Street Name / Area Name</label><span class=\"text-danger font-weight-bold required\">*</span>\r\n                            <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Street Name / Area Name\" name=\"secondaryAddress\" value={this.state.contact.secondaryAddress} onChange={this.handleOnChange}/>\r\n                            <p class=\"text-danger\">{this.state.errors.secondaryAddress}</p>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-3\">\r\n                                {/* <label for=\"inputState\">State</label>\r\n                                <select id=\"inputState\" className=\"form-control\">\r\n                                    <option selected>Choose...</option>\r\n                                    <option>...</option>\r\n                                </select> */ }\r\n\r\n                                <CountryComponent componentName=\"country\" selectedCountry={this.state.contact.country} onChangeMethod={this.handleCountryOnChange} /> \r\n\r\n                                {/* <label for=\"inputCountry\">Country</label>\r\n                                <select id=\"inputCountry\" className=\"form-control\" name=\"countryId\" \r\n                                    value={this.state.contact.countryId}\r\n                                    onChange={this.handleOnChange}>\r\n                                    <option key=\"0\" value=\"0\">Choose a Country...</option>\r\n                                    {                            \r\n                                        this.state.countryList.map ((country) => {\r\n                                            return (\r\n                                                <option key={country.countryId} value={country.countryId}>{country.countryName}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select> */}\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                {/* <label for=\"inputState\">State</label>\r\n                                <select id=\"inputState\" className=\"form-control\">\r\n                                    <option selected>Choose...</option>\r\n                                    <option>...</option>\r\n                                </select> */}\r\n\r\n                                <StateComponent componentName=\"state\" selectedCountry={this.state.contact.country.countryId}  selectedState={this.state.contact.state} onChangeMethod={this.handleStateOnChange}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-4\">\r\n                                <label for=\"inputCity\">City</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputCity\" placeholder=\"City Name\" name=\"city\" value={this.state.contact.city} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputZip\">Zip</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputZip\" name=\"zip\" value={this.state.contact.zip} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputMobile\">Mobile #</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputMobile\" name=\"mobile\" value={this.state.contact.mobile} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputHome\">Home #</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputHome\" name=\"homePhone\" value={this.state.contact.homePhone} onChange={this.handleOnChange}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-2\">\r\n                                <label for=\"inputWork\">Work #</label>\r\n                                <input type=\"text\" autoComplete=\"off\" className=\"form-control\" id=\"inputWork\" name=\"workPhone\" value={this.state.contact.workPhone} onChange={this.handleOnChange}/>                                \r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <RelationshipComponent autoComplete=\"off\" componentName=\"relationship\" selectedRelationship={this.state.contact.relationship} onChangeMethod={this.handleRelationshipOnChange} isError={this.state.errors.relationship}/> \r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <GroupComponent autoComplete=\"off\" componentName=\"group\" selectedGroup={this.state.contact.group} onChangeMethod={this.handleGroupOnChange} isError={this.state.errors.group}/> \r\n                            </div>                                                       \r\n\r\n                        </div>                        \r\n                        <div className=\"form-row\">\r\n                        </div>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.showConfirmDialog} data-target={this.state.isValid ? \"#confirmModal\" : undefined} data-toggle='modal'  >Submit</button> &nbsp;\r\n                        <button type=\"button\" className=\"btn btn-primary\">Reset</button> &nbsp;\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleClickOnBack}>Back</button>\r\n                    </form>\r\n\r\n                    <ConfirmModalComponent handleOnClickYes={this.handleClickOnYes} handleOnClickNo={this.handleClickOnNo}/>\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n    \r\n    handleClickOnBack = () => {\r\n        this.props.history.push (\"/contacts\")\r\n        console.log (this.state.contact)    \r\n    }\r\n\r\n    handleOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n        this.setState ({\r\n            contact: { ...this.state.contact, [event.target.name]: event.target.value }\r\n        })\r\n        console.log ('country ' + this.state.contact.countryId)\r\n    }\r\n\r\n    handleCountryOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n\r\n        let country = this.state.contact.country\r\n\r\n        country.countryId = event.target.value\r\n\r\n        this.setState ({\r\n            contact: { ...this.state.contact, country: country }\r\n        })\r\n        console.log ('country ' + this.state.contact.country.countryId)\r\n    }\r\n\r\n    handleStateOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n\r\n        let state = this.state.contact.state\r\n\r\n        state.stateId = event.target.value\r\n\r\n        this.setState ({\r\n            contact: { ...this.state.contact, state: state }\r\n        })\r\n        console.log ('state ' + this.state.contact.state.stateId)\r\n    }    \r\n\r\n    handleRelationshipOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n\r\n        let relationship = this.state.contact.relationship\r\n\r\n        relationship.relationshipId = event.target.value\r\n\r\n        this.setState ({\r\n            contact: { ...this.state.contact, relationship: relationship }\r\n        })\r\n        console.log ('relationship ' + this.state.contact.relationship.relationshipId)\r\n    }    \r\n\r\n    handleGroupOnChange = (event) => {\r\n        console.log ('object ' + event.target.name)\r\n        console.log ('value ' + event.target.value)\r\n\r\n        let group = this.state.contact.group\r\n\r\n        group.groupId = event.target.value\r\n\r\n        this.setState ({\r\n            contact: { ...this.state.contact, group: group }\r\n        })\r\n        console.log ('group ' + this.state.contact.group.groupId)\r\n    }   \r\n    \r\n    showConfirmDialog = (event) => {\r\n        console.log ('showConfirm')\r\n        event.preventDefault()\r\n        if (this.isValidForm()) {\r\n            this.setState ( {\r\n                showConfirmModal : !this.state.showConfirmModal\r\n            })\r\n        }\r\n    }\r\n\r\n    isValidForm = () => {\r\n        \r\n        let isValid = true;\r\n\r\n        let errors = {\r\n            nickName : '',\r\n            personalEmail : '',\r\n            primaryAddress : '',\r\n            relationship : '',\r\n            group : ''\r\n        }\r\n\r\n        let contact = this.state.contact\r\n\r\n        console.log ('this.state.contact.nickName ' + this.state.contact.nickName)\r\n        if (!contact.nickName) {\r\n            isValid = false\r\n            errors.nickName = 'Please enter Nick Name'\r\n        }\r\n\r\n        if (!this.state.contact.personalEmail) {\r\n            isValid = false\r\n            errors.personalEmail = 'Please enter Personal Email'\r\n        }\r\n\r\n        if (!this.state.contact.primaryAddress) {\r\n            isValid = false\r\n            errors.primaryAddress = 'Please enter Primary Address'\r\n        }\r\n\r\n        if (!this.state.contact.relationship.relationshipId) {\r\n            isValid = false\r\n            errors.relationship = 'Please choose the Relationship'\r\n        }\r\n\r\n        console.log ('this.state.contact.group.groupId  ' + this.state.contact.group.groupId )\r\n        if (!   this.state.contact.group.groupId) {\r\n            isValid = false\r\n            errors.group = 'Please choose the Group'\r\n        }\r\n        console.log ('isValid ' + isValid)\r\n        this.setState ({\r\n            isValid : isValid,\r\n            errors: errors\r\n        })\r\n        \r\n        return isValid\r\n    }\r\n\r\n    handleClickOnYes = () => {\r\n        console.log ('Yes')    \r\n        ContactService.saveContact (this.state.contact)\r\n            .then ((response) => {\r\n                console.log ('contact saved...') \r\n                this.props.history.push ('/contacts/confirm')\r\n            }) \r\n            .catch ( (response) => {\r\n                console.log ('contact save failed...')    \r\n            })\r\n    }\r\n\r\n    handleClickOnNo = () => {\r\n        console.log ('No')    \r\n\r\n    }\r\n\r\n    handleClickOnYes = () => {\r\n        console.log ('Yes')    \r\n        ContactService.saveContact (this.state.contact).then ( (response) => {\r\n                console.log ('contact saved...')  \r\n                this.props.history.push (\"/contacts/confirm\")  \r\n            }\r\n        ) .catch ( (response) => {\r\n                console.log ('contact save failed...')    \r\n            }\r\n        )\r\n    }\r\n\r\n    handleOnClickClose = () => {\r\n        console.log ('No')    \r\n\r\n    }\r\n\r\n    initialize = () => {\r\n        console.log ('pre-initialize ' + this.state.contact)\r\n        let user = this.state.contact.user\r\n        user.userId = AuthService.getLoggedInUserId()\r\n\r\n        let status = this.state.contact.status\r\n        status.statusId = 100\r\n          \r\n        this.setState ({\r\n            contact: { ...this.state.contact, user: user },\r\n            contact: { ...this.state.contact, status: status }\r\n        }) \r\n    }\r\n\r\n}\r\nexport default ContactForm"]},"metadata":{},"sourceType":"module"}